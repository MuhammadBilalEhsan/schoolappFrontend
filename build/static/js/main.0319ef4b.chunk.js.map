{"version":3,"sources":["images/stream.jpg","components/Spinner.js","appSetting/appSetting.js","components/MuiSnacks.js","components/Login.js","redux/actions/index.js","components/Header.js","components/EditProfile.js","components/ChangeProfilePic.js","components/Profile.js","components/Attendance.js","components/AddTopic.js","components/CourseOutlineComp.js","components/AddCourse.js","components/CDTeacher.js","components/CourseAcc.js","components/TabsComp.js","components/StudentTab2.js","components/CDStudent.js","components/CourseDetails.js","components/SendingMessageInputComp.js","components/MessageBox.js","components/Stream.js","components/Announcement.js","components/CourseStudentsComp.js","components/Assignment.js","components/AssignmentAccordion.js","components/StudentForThreeComp.js","components/SubmittedAccordion.js","components/SubmittedAndChecked.js","components/CheckedAssignments.js","components/AssignmentComp.js","components/ClassMaterials.js","components/PrivateConversation.js","components/MessagesComp.js","PrivateRoute.js","App.js","reportWebVitals.js","redux/reducers/usersReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Spinner","Backdrop","sx","color","backgroundColor","open","CircularProgress","appSetting","severHostedUrl","MuiSnacks","openSnack","severity","text","setOpenSnack","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","Boolean","autoHideDuration","onClose","Alert","variant","width","Login","name","value","setAuth","useState","email","password","loginData","setLoginData","loader","setLoader","setSeverity","history","useHistory","handleChange","e","target","Box","className","display","alignItems","maxWidth","borderRadius","boxShadow","mx","p","pt","justifyContent","method","onSubmit","preventDefault","length","axios","post","then","res","localStorage","setItem","data","curUser","_id","push","catch","err","handleSubmit","style","textAlign","Typography","Divider","marginBottom","size","TextField","autoFocus","margin","label","type","onChange","autoComplete","fullWidth","inputProps","maxLength","Button","mt","startIcon","curUserFun","payload","getCourseFunc","currentCourseFunc","settingAssignments","currentAssignmentRedux","BtnBox","styled","theme","padding","spacing","breakpoints","up","MobMenuComp","down","Header","mobMenuAnchor","setMobMenuAnchor","isMobMenuOpen","dispatch","useDispatch","closeMobMenu","logoutFunction","removeItem","window","location","reload","mobileMenu","Menu","anchorEl","id","keepMounted","MenuItem","component","Link","onClick","to","paddingBottom","AppBar","position","Toolbar","flexGrow","textDecoration","marginLeft","Tooltip","title","arrow","IconButton","currentTarget","EditProfileFormik","setCurrentUser","setOpen","uidFromLocalStorage","getItem","formik","useFormik","initialValues","fname","lname","fatherName","atClass","age","phone","validateOnChange","validationSchema","yup","shape","max","required","positive","integer","min","typeError","values","a","updated","message","console","log","Dialog","DialogTitle","align","DialogContent","errors","touched","DialogActions","ChangeProfilePic","setImgURL","imgObj","setImgObj","saveImg","formData","FormData","append","config","headers","pPic","cursor","height","px","border","hidden","accept","img","files","Item","Paper","typography","body1","Profile","dp","imgURL","currentUser","roll","my","Avatar","alt","src","bottom","zIndex","Grid","container","item","xs","md","mb","BorderLinearProgress","LinearProgress","linearProgressClasses","colorPrimary","palette","grey","mode","bar","useStyles","makeStyles","attendance_top","Attendance","classes","todayAttend","setTodayAttend","holiday","setHoliday","newState","setNewState","firstDate","setFirstDate","curMonth","setCurMonth","curYear","setCurYear","attPercent","setAttPercent","lastMonthPercent","setLastMonthPercent","latestMonthAttCalc","attendance","moment","dateOfAddmission","date","month","year","firstDateOfCurMonth","overallTotalDays","businessDiff","attArr","curMonthTotalPresent","days","overAllAttCalc","largeDOA","monthDOA","dateDOA","yearDOA","abc","map","curElem","overallPresentDays","reduce","total","num","handleClick","att","Date","getFullYear","getMonth","getDate","hours","getHours","mins","getMinutes","time","attObj","error","useEffect","lastMonth","checkTodayAtt","find","todayDate","checkHoliday","day","py","disabled","thickness","Math","round","AddTopic","topicChips","setTopicChips","topicErr","setTopicErr","editCourse","course","preVals","topics","topicLabel","setTopicLabel","addChip","topicLabelTrim","trim","topicObj","key","getTime","toString","flexDirection","InputProps","startAdornment","Chip","marginRight","marginTop","onDelete","chipToDelete","chips","filter","chip","onKeyPress","handleKeyPress","CourseOutlineComp","courseOutlineArr","coOutErr","curObj","ind","Object","keys","week","durationArr","AddCourse","menuOpen","setMenuOpen","duration","selectDurInd","setSelectDurInd","setCoOutErr","editEditCourse","setEditEditCourse","weekNotSelected","setWeekNotSelected","setCourseOutlineArr","handleClickOpen","handleMenuClose","teacher_id","teacherEmail","teacherClass","courseName","courseDesc","courseOutline","editted","socket","emit","newCourse","Fab","multiline","background","handleMenuOpen","endIcon","String","index","objsOfCOArr","Array","handleSelect","prev","tempCourse","CDTeacher","marginX","pb","borderBottom","textTransform","entries","sm","wordWrap","ml","CourseAcc","panel","expanded","setExpanded","hideCurrentCourse","setHideCurrentCourse","uid","applyCourse","obj","student_name","course_id","student_id","student","Accordion","isExpanded","AccordionSummary","expandIcon","aria-controls","minWidth","bgcolor","paddingX","AccordionDetails","AccordionActions","TabPanel","props","children","TabsComp","tab1Label","tab2Label","tab3Label","tab4Label","panel1","panel2","panel3","panel4","setValue","borderColor","Tabs","newValue","textColor","scrollButtons","TabIndicatorProps","Tab","StudentTab2","curCor","thisCourse","setThisCourse","allCourses","setAllCourses","curCourseDetails","findLocally","DBcourse","CDStudent","courses","removedByTeacherState","setRemovedByTeacherState","CDstudentStartFunction","removedByTeacher","setTimeout","CourseDetails","useSelector","state","usersReducer","studentCourse","SendingMessageInputComp","userName","placeholder","submitFunc","justifySelf","endAdornment","MessageBox","timeColor","nameFirestLetter","paddingLeft","Stream","currentCourse","setMessage","isMuted","setIsMuted","findStudentInCourse","students","muted","newMessage","format","messageObj","courseID","streamImg","chat","currentMessage","Announcement","courseAnnouncments","setCourseAnnouncments","showInput","setShowInput","toggle","announcementObj","announcement","minHeight","fontSize","CourseStudentsComp","courseStudents","setCourseStudents","setAnchorEl","studentID","setStudentID","studentName","setStudentName","removeStudentFunc","reqObj","muteStudentFunc","sendMsgFunc","senderID","senderName","recieverID","recieverName","currentStudent","sizes","aria-haspopup","aria-expanded","undefined","MenuListProps","Assignment","btnTitle","tooltipTitle","btnIcon","dialogTitle","actionTitle","isTeacher","btnStartIcon","btnColor","btnVariant","currentAssignment","input2label","setAllAssignments","openAssignDialog","setOpenAssignDialog","file","setFile","closeDialog","desc","allAssignment","assignment","minRows","selectedFile","AssignmentAccordion","setCurrentAssignmentID","setChecked","stopPropagation","previewAssignment","href","description","StudentForThreeComp","submitted","mr","marks","SubmittedAccordion","assignmentID","checked","hideAccordion","setHideAccordion","Number","setMarks","giveNumbersFunc","SubmittedAndChecked","currentAssignmentID","setAssignment","on","get","borderTop","CheckedAssignments","currentCourseID","checkedAssignments","setCheckedAssignments","findStudent","getMarks","AssignmentComp","assignments","allAssignments","setCurrentCourseID","class_materials","ClassMaterials","showClass","setShowClass","spinner","setSpinner","enrolledStudent","params","useParams","PrivateConversation","maxHeight","overflowY","MessagesComp","allConversationsArray","setAllConversationsArray","conversationID","setConversationID","allConversations","conversation","isUser1","user1ID","user2Name","user1Name","PrivateRoute","auth","SuccessComp","FailComp","rest","render","ENDPOINT","socketIO","transports","App","setUid","response","user","resp","studentClass","getStudentCourseFunc","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","users","action","findAlready","findCourse","filterOther","newArr","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0319ef4b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stream.86eba8bd.jpg\";","import React from 'react';\r\nimport { Backdrop, CircularProgress } from '@mui/material';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                sx={{ color: 'green', backgroundColor: \"#fff\" }}\r\n                open={true}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner","const appSetting = {\r\n    // severHostedUrl: 'http://localhost:4040/'\r\n    severHostedUrl: 'https://warm-hollows-02372.herokuapp.com'\r\n}\r\nexport default appSetting","import React from 'react'\r\nimport { Alert, Snackbar } from '@mui/material'\r\n\r\nconst MuiSnacks = ({ openSnack, severity, text, setOpenSnack }) => {\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSnack(\"\");\r\n    };\r\n    return (\r\n        <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: severity === \"success\" ? \"center\" : \"right\" }} open={Boolean(openSnack)} autoHideDuration={2500} onClose={handleClose} >\r\n            <Alert onClose={handleClose} variant=\"filled\" severity={severity || 'success'} sx={{ width: '100%' }}>\r\n                {text}\r\n            </Alert>\r\n        </Snackbar >\r\n    )\r\n}\r\n\r\nexport default MuiSnacks\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Box, Button, TextField, Typography, Divider } from \"@mui/material\"\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport Spinner from \"./Spinner\";\r\nimport \"../css/login.css\";\r\nimport appSetting from '../appSetting/appSetting'\r\nimport MuiSnacks from \"./MuiSnacks\"\r\n\r\nconst Login = ({ setAuth }) => {\r\n\tconst [loginData, setLoginData] = useState({\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t});\r\n\tconst [loader, setLoader] = useState(false);\r\n\r\n\tconst [openSnack, setOpenSnack] = useState(\"\");\r\n\tconst [severity, setSeverity] = useState(\"\");\r\n\r\n\r\n\tconst history = useHistory();\r\n\tlet name, value;\r\n\tconst handleChange = (e) => {\r\n\t\tname = e.target.name;\r\n\t\tvalue = e.target.value;\r\n\t\tsetLoginData({ ...loginData, [name]: value });\r\n\t};\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetLoader(true);\r\n\r\n\t\tlet { email, password } = loginData;\r\n\t\tif (!email) {\r\n\t\t\tsetLoader(false);\r\n\t\t\tsetOpenSnack(\"Please write Valid Email!\");\r\n\t\t\tsetSeverity(\"error\");\r\n\t\t} else if (!password || password.length < 8) {\r\n\t\t\tsetOpenSnack(\"Password! contains at least 8 characters !\");\r\n\t\t\tsetSeverity(\"error\");\r\n\t\t\tsetLoader(false);\r\n\t\t} else {\r\n\t\t\taxios\r\n\t\t\t\t.post(`${appSetting.severHostedUrl}/user/login`, loginData)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlocalStorage.setItem(\"uid\", res.data.curUser._id);\r\n\t\t\t\t\tsetLoader(false);\r\n\t\t\t\t\tsetAuth(true)\r\n\t\t\t\t\thistory.push(\"/profile\");\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tsetLoader(false);\r\n\t\t\t\t\tsetOpenSnack(\"Invalid Credentials\");\r\n\t\t\t\t\tsetSeverity(\"error\");\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tif (loader) return <Spinner />;\r\n\treturn (\r\n\t\t<Box className={`_main`} display=\"flex\" alignItems=\"center\">\r\n\t\t\t{openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n\t\t\t<Box sx={{ backgroundColor: \"#fff\" }} maxWidth=\"400px\" borderRadius={1} boxShadow={3} mx=\"auto\" p={4} pt={2} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t\t<form method=\"POST\" onSubmit={(e) => handleSubmit(e)} style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t<Typography variant=\"h6\" textAlign=\"center\"> CY School App\r\n\t\t\t\t\t\t<Divider sx={{ marginBottom: 2 }} />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<FaUserAlt className=\"large-icon\" color=\"green\" size=\"50%\" />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tlabel=\"Your Email\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={loginData.email}\r\n\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tcolor={\"success\"}\r\n\t\t\t\t\t\tinputProps={{ maxLength: 32 }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tlabel=\"Your Password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tvalue={loginData.password}\r\n\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tcolor={\"success\"}\r\n\t\t\t\t\t\tinputProps={{ maxLength: 32 }}\r\n\t\t\t\t\t\tsx={{ marginBottom: 2 }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button size=\"large\" type=\"submit\" mt={2} variant=\"contained\" color=\"success\" startIcon={<FiLogIn size=\"22px\" color=\"#fff\" />} fullWidth>LOGIN</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","export const getUsers = data => {\r\n  return {\r\n    type: \"GET_USERS\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const curUserFun = data => {\r\n  return {\r\n    type: \"CUR_USER\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const getCourseFunc = data => {\r\n  return {\r\n    type: \"GET_COURSE\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const getStudentCourseFunc = data => {\r\n  return {\r\n    type: \"GET_Student_COURSES\",\r\n    payload: data,\r\n  };\r\n};\r\nexport const logoutFunc = () => {\r\n  return {\r\n    type: \"LOG_OUT\"\r\n  }\r\n}\r\nexport const updateCourses = (data) => {\r\n  return {\r\n    type: \"UPDATE_COURSES\",\r\n    payload: data\r\n  }\r\n}\r\nexport const currentCourseFunc = (data) => {\r\n  return {\r\n    type: \"CURRENT_COURSE\",\r\n    payload: data\r\n  }\r\n}\r\nexport const updateCurrentCourse = (data) => {\r\n  return {\r\n    type: \"UPDATE_CURRENT_COURSE\",\r\n    payload: data\r\n  }\r\n}\r\nexport const settingAssignments = (data) => {\r\n  return {\r\n    type: \"ALL_ASSIGNMENTS\",\r\n    payload: data\r\n  }\r\n}\r\nexport const updateAllAssignments = (data) => {\r\n  return {\r\n    type: \"UPDATE_ALL_ASSIGNMENTS\",\r\n    payload: data\r\n  }\r\n}\r\nexport const editAvailAbleCourses = (data) => {\r\n  return {\r\n    type: \"EDIT_AVAILABLE_COURSES\",\r\n    payload: data\r\n  }\r\n}\r\nexport const currentAssignmentRedux = (data) => {\r\n  return {\r\n    type: \"CURRENT_ASSIGNMENT\",\r\n    payload: data\r\n  }\r\n}\r\nexport const checkedAssignmentsRedux = (data) => {\r\n  return {\r\n    type: \"CHECKED_ASSIGNMENTS\",\r\n    payload: data\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n\tAppBar,\r\n\tToolbar,\r\n\tTypography,\r\n\tButton,\r\n\tIconButton,\r\n\tMenu,\r\n\tMenuItem,\r\n\tTooltip\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { CgMoreVertical, CgLogOff } from \"react-icons/cg\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { logoutFunc } from \"../redux/actions/index\"\r\n\r\nconst BtnBox = styled(\"div\")(({ theme }) => ({\r\n\tpadding: theme.spacing(1),\r\n\tdisplay: \"none\",\r\n\t[theme.breakpoints.up(\"md\")]: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n}));\r\nconst MobMenuComp = styled(\"div\")(({ theme }) => ({\r\n\tdisplay: \"none\",\r\n\t[theme.breakpoints.down(\"md\")]: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n}));\r\nconst Header = ({ setAuth }) => {\r\n\tconst [mobMenuAnchor, setMobMenuAnchor] = useState(null);\r\n\tconst isMobMenuOpen = Boolean(mobMenuAnchor);\r\n\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst openMobMenu = (e) => {\r\n\t\tsetMobMenuAnchor(e.currentTarget);\r\n\t};\r\n\tconst closeMobMenu = () => {\r\n\t\tsetMobMenuAnchor(null);\r\n\t};\r\n\tconst logoutFunction = () => {\r\n\t\tdispatch(logoutFunc())\r\n\t\tlocalStorage.removeItem(\"uid\");\r\n\t\tsetAuth(false)\r\n\t\twindow.location.reload(false);\r\n\t\thistory.push(\"/\");\r\n\t}\r\n\tconst mobileMenu = (\r\n\t\t<Menu\r\n\t\t\tanchorEl={mobMenuAnchor}\r\n\t\t\tid=\"mob_menu\"\r\n\t\t\tkeepMounted\r\n\t\t\topen={isMobMenuOpen}\r\n\t\t\tonClose={closeMobMenu}\r\n\t\t>\r\n\t\t\t<MenuItem\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tonClick={closeMobMenu}\r\n\t\t\t\tto=\"/profile\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tbackgroundColor: \"#fff\",\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tpaddingBottom: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tProfile\r\n\t\t\t</MenuItem>\r\n\t\t\t<MenuItem\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tonClick={closeMobMenu}\r\n\t\t\t\tto=\"/attendance\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tbackgroundColor: \"#fff\",\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tpaddingBottom: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tAttendance\r\n\t\t\t</MenuItem>\r\n\t\t\t<MenuItem\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tonClick={closeMobMenu}\r\n\t\t\t\tto=\"/coursedetails\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tbackgroundColor: \"#fff\",\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tpaddingBottom: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tCourse Details\r\n\t\t\t</MenuItem>\r\n\t\t\t<MenuItem\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tonClick={closeMobMenu}\r\n\t\t\t\tto=\"/messages\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tbackgroundColor: \"#fff\",\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tpaddingBottom: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tMessages\r\n\t\t\t</MenuItem>\r\n\r\n\t\t\t<MenuItem\r\n\t\t\t\tcomponent={Button}\r\n\t\t\t\tonClick={logoutFunction}\r\n\t\t\t\t// to=\"/logout\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tbackgroundColor: \"#fff\",\r\n\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tpaddingBottom: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tLog Out\r\n\t\t\t</MenuItem>\r\n\t\t</Menu>\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBar color=\"success\" position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<Typography component={Link} color=\"inherit\" to=\"/profile\" variant=\"h5\" sx={{ flexGrow: 1, textDecoration: \"none\" }}>\r\n\t\t\t\t\t\tSchool App\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<BtnBox>\r\n\t\t\t\t\t\t<Button component={Link} to=\"/profile\" size=\"small\" color=\"inherit\">\r\n\t\t\t\t\t\t\tProfile\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\tto=\"/attendance\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tsx={{ marginLeft: 3 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAttendance\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\tto=\"/coursedetails\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tsx={{ marginLeft: 3 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCourse Details\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\tto=\"/messages\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tsx={{ marginLeft: 3 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tMessages\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Tooltip title=\"Log Out\" arrow>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\t\tto=\"/logout\"\r\n\t\t\t\t\t\t\t\tsx={{ marginLeft: 3 }}\r\n\t\t\t\t\t\t\t\tonClick={logoutFunction}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CgLogOff color=\"#fff\" size=\"25px\" />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</BtnBox>\r\n\t\t\t\t\t<MobMenuComp>\r\n\t\t\t\t\t\t<IconButton color=\"inherit\" onClick={openMobMenu}>\r\n\t\t\t\t\t\t\t<CgMoreVertical />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</MobMenuComp>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t{mobileMenu}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n\tDialogTitle,\r\n\tDialogContent,\r\n\tDialogActions,\r\n\tDialog,\r\n\tTextField,\r\n\tButton,\r\n\tTooltip,\r\n\tBox\r\n} from \"@mui/material/\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { curUserFun } from \"../redux/actions/index\";\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\n\r\n\r\nexport default function EditProfileFormik({ curUser, setOpenSnack, setSeverity, setCurrentUser }) {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst uidFromLocalStorage = localStorage.getItem(\"uid\");\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tid: uidFromLocalStorage,\r\n\t\t\tfname: curUser?.fname,\r\n\t\t\tlname: curUser?.lname,\r\n\t\t\tfatherName: curUser?.fatherName,\r\n\t\t\tatClass: curUser?.atClass,\r\n\t\t\tage: curUser?.age,\r\n\t\t\tphone: curUser?.phone,\r\n\t\t},\r\n\t\tvalidateOnChange: true,\r\n\r\n\t\tvalidationSchema: yup.object().shape({\r\n\t\t\tfname: yup.string()\r\n\t\t\t\t.max(12, \"Plese Enter a Name less then 12 Characters\")\r\n\t\t\t\t.required(\"Please Enter First Name\"),\r\n\t\t\tlname: yup.string()\r\n\t\t\t\t.max(12, \"Plese Enter a Name less then 12 Characters\")\r\n\t\t\t\t.required(\"Please Enter Last Name\"),\r\n\t\t\tfatherName: yup.string()\r\n\t\t\t\t.max(16, \"Plese Enter a Name less then 16 Characters\")\r\n\t\t\t\t.required(\"Please Enter Your Father's Name\"),\r\n\t\t\tatClass: yup.number().required().positive().integer().min(6).max(10),\r\n\t\t\tage: yup.number().required(\"It is not a good habit to hide your age.\")\r\n\t\t\t\t.positive(\"That doesn't look like a human's age.\")\r\n\t\t\t\t.integer(\"Don't use decimal point\")\r\n\t\t\t\t.min(10, \"You are not egligible for this school, you are a baby,\")\r\n\t\t\t\t.max(199, \"A noble human cannot live so long\"),\r\n\t\t\tphone: yup.number()\r\n\t\t\t\t.typeError(\"That doesn't look like a phone number\")\r\n\t\t\t\t.positive(\"A phone number can't start with a minus\")\r\n\t\t\t\t.integer(\"A phone number can't include a decimal point\")\r\n\t\t\t\t.min(3000000000, \"It doesn't looks like a phone number\")\r\n\t\t\t\t.max(3499999999, \"It doesn't looks like a phone number\")\r\n\t\t\t\t.required('A phone number is required')\r\n\t\t}),\r\n\t\tonSubmit: async (values) => {\r\n\t\t\ttry {\r\n\t\t\t\thandleClose();\r\n\t\t\t\tconst res = await axios.post(`${appSetting.severHostedUrl}/user/edit-profile`, values);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tsetCurrentUser(res.data.updated)\r\n\t\t\t\t\tdispatch(curUserFun(res.data.updated))\r\n\t\t\t\t\tsetOpenSnack(res.data.message)\r\n\t\t\t\t\tsetSeverity(\"success\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetOpenSnack(\"User not update!\")\r\n\t\t\t\t\tsetSeverity(\"error\")\r\n\t\t\t\t\thandleClose();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\thandleClose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t})\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Tooltip title=\"Edit Profile\" arrow >\r\n\t\t\t\t<Button color=\"success\" variant=\"contained\" size=\"small\" onClick={handleClickOpen}>\r\n\t\t\t\t\t<FaUserEdit color=\"inherit\" size=\"16px\" />\r\n\t\t\t\t</Button>\r\n\t\t\t</Tooltip>\r\n\r\n\t\t\t{/* Openning Dialouge Box */}\r\n\t\t\t<Dialog Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\" >\r\n\t\t\t\t<DialogTitle align=\"center\" backgroundColor=\"white\">\r\n\t\t\t\t\tEdit Profile\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"fname\"\r\n\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.fname}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"fname\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t// required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.fname && formik.touched.fname && (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.fname}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"lname\"\r\n\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.lname}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"lname\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t// required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.lname && formik.touched.lname && (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.lname}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"fatherName\"\r\n\t\t\t\t\t\t\tlabel=\"Son of\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.fatherName}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"fatherName\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t// required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.fatherName && formik.touched.fatherName && (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.fatherName}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"atClass\"\r\n\t\t\t\t\t\t\tlabel=\"In Class\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.atClass}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"atClass\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.atClass && formik.touched.atClass && (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.atClass}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"age\"\r\n\t\t\t\t\t\t\tlabel=\"Age\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.age}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"age\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t// required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.age && formik.touched.age && (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.age}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Tooltip title=\"Enter Phone Number Escaped 0\" arrow>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\tlabel=\"Contact No...\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values.phone}\r\n\t\t\t\t\t\t\t\tonChange={formik.handleChange(\"phone\")}\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\t// required\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t{formik.errors.phone && formik.touched.phone && (\r\n\t\t\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.phone}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{/* <Button variant=\"contained\" type=\"submit\">\r\n\t\t\t\t\t\t\tSave Edit\r\n\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={formik.handleSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave Edit\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button color=\"success\" onClick={handleClose}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog >\r\n\t\t</Box >\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\"\r\nimport {\r\n\tButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tBox,\r\n\tTooltip,\r\n} from \"@mui/material/\";\r\nimport { BsCameraFill } from \"react-icons/bs\";\r\nimport { FaUserEdit } from \"react-icons/fa\";\r\nimport appSetting from '../appSetting/appSetting'\r\nimport axios from \"axios\";\r\n\r\nexport default function ChangeProfilePic({ curUser, setImgURL, setSeverity, setOpenSnack }) {\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [imgObj, setImgObj] = useState(null);\r\n\tconst uidFromLocalStorage = localStorage.getItem(\"uid\");\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst handleChange = (img) => {\r\n\t\tconst size = img?.size\r\n\t\tconst type = img?.type\r\n\t\tif (!img) {\r\n\t\t\tsetOpenSnack(\"please Select an image\")\r\n\t\t\tsetSeverity(\"error\")\r\n\t\t}\r\n\t\telse if (Boolean(type === \"image/png\") || Boolean(type === \"image/jpeg\") || Boolean(type === \"image/jpg\")) {\r\n\t\t\tsetImgObj(img)\r\n\t\t}\r\n\t\telse if (size > 5000000) {\r\n\t\t\tsetOpenSnack(\"please Select an image of size less then 5 mb\")\r\n\t\t\tsetSeverity(\"error\")\r\n\t\t} else {\r\n\t\t\tsetOpenSnack(\"you can select only image...\")\r\n\t\t\tsetSeverity(\"error\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveImg = async (e) => {\r\n\t\te.preventDefault()\r\n\t\ttry {\r\n\t\t\tif (imgObj) {\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tformData.append(\"_id\", uidFromLocalStorage);\r\n\t\t\t\tformData.append(\"myImg\", imgObj);\r\n\t\t\t\tconst config = {\r\n\t\t\t\t\theaders: { \"content-type\": \"multipart/form-data\" },\r\n\t\t\t\t};\r\n\t\t\t\thandleClose()\r\n\t\t\t\tconst res = await axios.post(`${appSetting.severHostedUrl}/user/editprofileimg`, formData, config);\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tconsole.log(\"pPic\", res.data.pPic)\r\n\t\t\t\t\tsetImgURL(res.data.pPic)\r\n\t\t\t\t\tsetOpenSnack(res.data.message)\r\n\t\t\t\t\tsetSeverity(\"success\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetOpenSnack(\"Please Select an Image\")\r\n\t\t\t\tsetSeverity(\"error\")\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\thandleClose()\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Tooltip title=\"Edit Profile Picture\" arrow>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<BsCameraFill style={{ cursor: \"pointer\" }} onClick={handleClickOpen} size=\"20px\" color=\"green\" height=\"100%\" />\r\n\t\t\t\t</Box>\r\n\t\t\t</Tooltip>\r\n\r\n\t\t\t{/* Openning Dialouge Box */}\r\n\t\t\t<Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n\t\t\t\t<DialogTitle align=\"center\" backgroundColor=\"white\">\r\n\t\t\t\t\tEdit Picture\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\r\n\t\t\t\t\t<form method=\"POST\">\r\n\t\t\t\t\t\t<Box display=\"flex\">\r\n\t\t\t\t\t\t\t<Box flexGrow={1} pt={1} px={1} border=\"1px solid green\" borderRadius={1}>\r\n\t\t\t\t\t\t\t\t{imgObj?.name ? imgObj?.name : \"Currently No Image\"}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Button component=\"label\">\r\n\t\t\t\t\t\t\t\t<FaUserEdit color=\"green\" size=\"22px\" />\r\n\t\t\t\t\t\t\t\t<input hidden name=\"myImg\" type=\"file\" accept=\"image/png, image/jpeg\" onChange={(e) => handleChange(e.target.files[0])} />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button color=\"success\" variant=\"contained\" onClick={saveImg}>\r\n\t\t\t\t\t\tsave image\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button color=\"success\" onClick={handleClose}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n","// import socketIO from \"socket.io-client\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Header from \"./Header\";\r\nimport { Box, Avatar, Grid, Paper, Typography } from \"@mui/material\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport ChangeProfilePic from \"./ChangeProfilePic\";\r\nimport MuiSnacks from \"./MuiSnacks\"\r\nimport \"../App.css\";\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n\t...theme.typography.body1,\r\n\tpadding: theme.spacing(1.5),\r\n\tdisplay: \"flex\",\r\n\tjustifyContent: \"space-between\",\r\n\tcolor: \"green\",\r\n}));\r\nconst Profile = ({ curUser, setAuth }) => {\r\n\tconst [imgURL, setImgURL] = useState(curUser?.dp)\r\n\tconst [openSnack, setOpenSnack] = useState(\"\");\r\n\tconst [severity, setSeverity] = useState(\"\");\r\n\tconst [currentUser, setCurrentUser] = useState(curUser);\r\n\r\n\r\n\tlet { age, atClass, email, fatherName, fname, lname, phone, roll } = currentUser;\r\n\treturn (\r\n\t\t<Box className={`_main`}>\r\n\t\t\t<Header curUser={curUser} setAuth={setAuth} />\r\n\t\t\t<Box\r\n\t\t\t\tmt={1}\r\n\t\t\t\twidth=\"99%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t>\r\n\t\t\t\t<EditProfile\r\n\t\t\t\t\tcurUser={curUser}\r\n\t\t\t\t\tsetSeverity={setSeverity}\r\n\t\t\t\t\tsetOpenSnack={setOpenSnack}\r\n\t\t\t\t\tsetCurrentUser={setCurrentUser}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t\t<Box width=\"100%\" my=\"auto\">\r\n\r\n\t\t\t\t{openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n\t\t\t\t<Box width=\"70%\" mx=\"auto\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\talt={`${fname} ${lname}`}\r\n\t\t\t\t\t\tsrc={imgURL}\r\n\t\t\t\t\t\tsx={{ width: \"180px\", height: \"180px\", border: \"1px dashed green\" }}\r\n\t\t\t\t\t\tmx=\"auto\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\tbottom=\"13px\"\r\n\t\t\t\t\tzIndex={1}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChangeProfilePic\r\n\t\t\t\t\t\tcurUser={curUser}\r\n\t\t\t\t\t\tsetImgURL={setImgURL}\r\n\t\t\t\t\t\tsetSeverity={setSeverity}\r\n\t\t\t\t\t\tsetOpenSnack={setOpenSnack}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box maxWidth=\"900px\" mx=\"auto\" mt={3} px={5} position=\"relative\" bottom=\"30px\">\r\n\t\t\t\t\t<Grid container spacing={2} justifyContent=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tName:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">{`${fname} ${lname}`}</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tEmail:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{email}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tClass:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tatClass ? (\r\n\t\t\t\t\t\t\t\t\t\t\tatClass\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tnot Provided\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tAge:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tage ? (\r\n\t\t\t\t\t\t\t\t\t\t\tage\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tnot Provided\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tSon of:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tfatherName ? (\r\n\t\t\t\t\t\t\t\t\t\t\tfatherName\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tnot Provided\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tContact:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tphone ? (\r\n\t\t\t\t\t\t\t\t\t\t\tphone\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body1\" color=\"success\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tnot Provided\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12} md={6} mb={2}>\r\n\t\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t\t<Box width=\"30%\" color=\"black\" textAlign=\"right\">\r\n\t\t\t\t\t\t\t\t\tRoll:\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t<Box width=\"66%\" textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t{roll}\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Box, Typography, Button, } from \"@mui/material\";\r\nimport LinearProgress, { linearProgressClasses } from \"@mui/material/LinearProgress\";\r\nimport moment from \"moment-business-days\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { curUserFun } from \"../redux/actions\";\r\nimport MuiSnacks from \"./MuiSnacks\";\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n\theight: 10,\r\n\tborderRadius: 5,\r\n\t[`&.${linearProgressClasses.colorPrimary}`]: {\r\n\t\tbackgroundColor:\r\n\t\t\ttheme.palette.grey[theme.palette.mode === \"light\" ? 200 : 800],\r\n\t},\r\n\t[`& .${linearProgressClasses.bar}`]: {\r\n\t\tborderRadius: 5,\r\n\t\tbackgroundColor: theme.palette.mode === \"light\" ? \"green\" : \"#30e833\",\r\n\t},\r\n}));\r\nconst useStyles = makeStyles((/*theme */) => ({\r\n\tattendance_top: {\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n}));\r\n\r\nconst Attendance = ({ curUser, setAuth }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [todayAttend, setTodayAttend] = useState(true);\r\n\tconst [holiday, setHoliday] = useState(null);\r\n\tconst [newState, setNewState] = useState(false);\r\n\tconst [firstDate, setFirstDate] = useState();\r\n\tconst [curMonth, setCurMonth] = useState();\r\n\tconst [curYear, setCurYear] = useState();\r\n\tconst [attPercent, setAttPercent] = useState(0);\r\n\tconst [lastMonthPercent, setLastMonthPercent] = useState(0);\r\n\r\n\tconst [openSnack, setOpenSnack] = useState(\"\");\r\n\tconst [severity, setSeverity] = useState(\"\");\r\n\r\n\r\n\tconst _id = localStorage.getItem(\"uid\");\r\n\tconst dispatch = useDispatch()\r\n\t// ____________________________________________________________________________________________\r\n\r\n\tconst checkTodayAtt = () => {\r\n\t\t// if (curUser.attendance && curUser.attendance.length > 0) {\r\n\t\tconst attArr = curUser.attendance;\r\n\t\tconst lastMonth = attArr[attArr?.length - 1];\r\n\r\n\t\t// check user have marked his/her attendance of today or not\r\n\t\tconst checkTodayAtt = lastMonth?.days?.find(\r\n\t\t\t(curElem) => curElem.todayDate === moment().date(),\r\n\t\t);\r\n\t\tif (!checkTodayAtt && moment().date() === 1) {\r\n\t\t\thandleClick()\r\n\t\t\tsetTodayAttend(true);\r\n\t\t}\r\n\t\tconst checkHoliday = moment().day() === 0 || moment().day() === 6\r\n\t\tif (checkTodayAtt) {\r\n\t\t\tsetTodayAttend(true);\r\n\t\t} else if (checkHoliday) {\r\n\t\t\tsetHoliday(true)\r\n\t\t} else {\r\n\t\t\tsetTodayAttend(false);\r\n\t\t}\r\n\t\t// }\r\n\t\tlatestMonthAttCalc();\r\n\t\toverAllAttCalc();\r\n\t};\r\n\r\n\t// ____________________________________________________________________________________________\r\n\tconst latestMonthAttCalc = () => {\r\n\t\tif (curUser.attendance && curUser.attendance.length > 0) {\r\n\t\t\t// getting total working/bussiness days (01-CurMonth-curYear - curr Date)\r\n\t\t\tif (\r\n\t\t\t\tmoment(curUser.dateOfAddmission).date() === moment().date() &&\r\n\t\t\t\tmoment(curUser.dateOfAddmission).month() === moment().month() &&\r\n\t\t\t\tmoment(curUser.dateOfAddmission).year() === moment().year()\r\n\t\t\t) {\r\n\t\t\t\t// handleClick()\r\n\t\t\t\tsetLastMonthPercent(100);\r\n\t\t\t} else if (\r\n\t\t\t\tmoment(curUser.dateOfAddmission).month() === moment().month() &&\r\n\t\t\t\tmoment(curUser.dateOfAddmission).year() === moment().year()\r\n\t\t\t) {\r\n\t\t\t\tsetFirstDate(moment(curUser.dateOfAddmission).date());\r\n\t\t\t\tsetCurMonth(moment(curUser.dateOfAddmission).month() + 1);\r\n\t\t\t\tsetCurYear(moment(curUser.dateOfAddmission).year());\r\n\r\n\t\t\t\tconst firstDateOfCurMonth = `${curMonth}-${firstDate}-${curYear}`;\r\n\t\t\t\tconst overallTotalDays = moment(\r\n\t\t\t\t\tfirstDateOfCurMonth,\r\n\t\t\t\t\t\"MM-DD-YYYY\",\r\n\t\t\t\t).businessDiff(moment(moment(), \"MM-DD-YYYY\"));\r\n\t\t\t\t// getting total days of current month in which user present\r\n\t\t\t\tconst attArr = curUser.attendance;\r\n\t\t\t\tconst lastMonth = attArr[attArr?.length - 1];\r\n\t\t\t\tconst curMonthTotalPresent = lastMonth.days.length;\r\n\r\n\t\t\t\tconst curMonthOpperation =\r\n\t\t\t\t\t(curMonthTotalPresent / overallTotalDays) * 100;\r\n\t\t\t\tsetLastMonthPercent(curMonthOpperation);\r\n\t\t\t} else if (moment().date() === 1) {\r\n\t\t\t\t// handleClick()\r\n\t\t\t\tsetLastMonthPercent(100);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// setFirstDate(1);\r\n\t\t\t\tsetCurMonth(moment().month() + 1);\r\n\t\t\t\tsetCurYear(moment().year());\r\n\r\n\t\t\t\tconst firstDateOfCurMonth = `${curMonth}-01-${curYear}`;\r\n\t\t\t\tconst overallTotalDays = moment(\r\n\t\t\t\t\tfirstDateOfCurMonth,\r\n\t\t\t\t\t\"MM-DD-YYYY\",\r\n\t\t\t\t).businessDiff(moment(moment(), \"MM-DD-YYYY\"));\r\n\t\t\t\t// getting total days of current month in which user present\r\n\t\t\t\tconst attArr = curUser?.attendance;\r\n\t\t\t\tconst lastMonth = attArr[attArr?.length - 1];\r\n\t\t\t\tconst curMonthTotalPresent = lastMonth.days?.length;\r\n\r\n\t\t\t\tconst curMonthOpperation =\r\n\t\t\t\t\t(curMonthTotalPresent / overallTotalDays) * 100;\r\n\t\t\t\tsetLastMonthPercent(curMonthOpperation);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// ____________________________________________________________________________________________\r\n\tconst overAllAttCalc = () => {\r\n\t\tif (curUser.attendance && curUser.attendance.length > 0) {\r\n\t\t\tif (\r\n\t\t\t\tmoment(curUser.dateOfAddmission).month() === moment().month() &&\r\n\t\t\t\tmoment(curUser.dateOfAddmission).year() === moment().year()\r\n\t\t\t) {\r\n\t\t\t\tsetAttPercent(lastMonthPercent);\r\n\t\t\t} else {\r\n\t\t\t\t// getting total working/bussiness days (dateOfAddmission- curr Date)\r\n\r\n\t\t\t\tconst largeDOA = moment(curUser.dateOfAddmission);\r\n\t\t\t\tconst monthDOA = largeDOA.month() + 1;\r\n\t\t\t\tconst dateDOA = largeDOA.date();\r\n\t\t\t\tconst yearDOA = largeDOA.year();\r\n\t\t\t\tconst dateOfAddmission = `${monthDOA}-${dateDOA}-${yearDOA}`;\r\n\t\t\t\tlet overallTotalDays = moment(\r\n\t\t\t\t\tdateOfAddmission,\r\n\t\t\t\t\t\"MM-DD-YYYY\",\r\n\t\t\t\t).businessDiff(moment(moment(), \"MM-DD-YYYY\"));\r\n\t\t\t\t// getting total days in which user present\r\n\r\n\t\t\t\tconst abc = curUser.attendance.map((curElem) => {\r\n\t\t\t\t\treturn curElem.days.length;\r\n\t\t\t\t});\r\n\t\t\t\tconst overallPresentDays = abc?.reduce(myFunc);\r\n\t\t\t\tfunction myFunc(total, num) {\r\n\t\t\t\t\treturn total + num;\r\n\t\t\t\t}\r\n\t\t\t\tconst overAllOpperation = (overallPresentDays / overallTotalDays) * 100;\r\n\t\t\t\t// console.log(overallTotalDays,overallPresentDays);\r\n\t\t\t\tsetAttPercent(overAllOpperation);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// ____________________________________________________________________________________________\r\n\r\n\tconst handleClick = async () => {\r\n\t\ttry {\r\n\t\t\tsetNewState(true);\r\n\t\t\t// e.preventDefault();/\r\n\t\t\tconst att = new Date();\r\n\t\t\tconst year = att.getFullYear();\r\n\t\t\tconst month = att.getMonth();\r\n\t\t\tconst date = att.getDate();\r\n\t\t\tconst hours = att.getHours();\r\n\t\t\tconst mins = att.getMinutes();\r\n\r\n\t\t\tconst time = `${hours}:${mins}`;\r\n\r\n\t\t\tconst attObj = { _id, year, month, date, time };\r\n\t\t\tconst res = await axios.post(`${appSetting.severHostedUrl}/user/attendance`, attObj);\r\n\t\t\tif (res) {\r\n\t\t\t\tdispatch(curUserFun(res.data.updated))\r\n\t\t\t\tsetOpenSnack(res.data.message);\r\n\t\t\t\tsetSeverity(\"success\")\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\tsetOpenSnack(\"Your Attendance not marked\");\r\n\t\t\tsetSeverity(\"error\")\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tcheckTodayAtt();\r\n\t\tlatestMonthAttCalc();\r\n\t\toverAllAttCalc();\r\n\t});\r\n\r\n\r\n\treturn (\r\n\t\t<Box className={`_main`}>\r\n\t\t\t<Header curUser={curUser} setAuth={setAuth} />\r\n\t\t\t<Box>\r\n\t\t\t\t{openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n\t\t\t\t<Box className={classes.attendance_top}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tholiday ? <Box mt={8} maxWidth=\"80%\" mx=\"auto\" py={2} textAlign=\"center\">\r\n\t\t\t\t\t\t\t<Typography color=\"green\" variant=\"h4\">Today is Holiday</Typography>\r\n\t\t\t\t\t\t</Box> : <Box>\r\n\t\t\t\t\t\t\t<Typography mt={8} mb={2} variant=\"h4\" display=\"inline-block\">\r\n\t\t\t\t\t\t\t\tMark Today's Attendance\r\n\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\t\t\tonClick={(e) => handleClick(e)}\r\n\t\t\t\t\t\t\t\t\tdisabled={todayAttend || newState}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{todayAttend ? \"Marked\" : \"Mark\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box my={5} mx=\"auto\" sx={{ width: \"80%\" }} display=\"block\">\r\n\t\t\t\t\t<Typography variant=\"h6\">This Month Attendance</Typography>\r\n\t\t\t\t\t<BorderLinearProgress\r\n\t\t\t\t\t\tthickness={2}\r\n\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\tvariant=\"determinate\"\r\n\t\t\t\t\t\tvalue={Math.round(lastMonthPercent)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{Math.round(lastMonthPercent)}%\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>{\" \"}\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Box mx=\"auto\" sx={{ width: \"80%\" }}>\r\n\t\t\t\t\t<Typography variant=\"h6\">Overall Attendance</Typography>\r\n\t\t\t\t\t<BorderLinearProgress\r\n\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\tvariant=\"determinate\"\r\n\t\t\t\t\t\tvalue={Math.round(attPercent)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Typography variant=\"h6\">{Math.round(attPercent)}%</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Attendance;","import React, { useState, useEffect } from \"react\";\r\nimport { Chip, TextField, } from \"@mui/material\";\r\n\r\nexport default function AddTopic({\r\n\ttopicChips,\r\n\tsetTopicChips,\r\n\ttopicErr,\r\n\tsetTopicErr,\r\n\teditCourse,\r\n\tcourse,\r\n}) {\r\n\tuseEffect(() => {\r\n\t\tif (editCourse) {\r\n\t\t\tconst preVals = course?.topics.map((item) => item)\r\n\t\t\tsetTopicChips(preVals)\r\n\t\t}\r\n\t}, [])\r\n\tconst [topicLabel, setTopicLabel] = useState(\"\");\r\n\tconst handleDelete = (chipToDelete) => () => {\r\n\t\tsetTopicChips((chips) =>\r\n\t\t\ttopicChips.filter((chip) => chip.key !== chipToDelete.key),\r\n\t\t);\r\n\t};\r\n\tconst addChip = () => {\r\n\t\tconst topicLabelTrim = topicLabel.trim();\r\n\t\tif (!topicLabelTrim) {\r\n\t\t\tsetTopicLabel(\"\");\r\n\t\t} else {\r\n\t\t\tconst topicObj = {\r\n\t\t\t\tkey: new Date().getTime().toString(),\r\n\t\t\t\tlabel: topicLabelTrim,\r\n\t\t\t};\r\n\t\t\tif (editCourse === true) {\r\n\t\t\t\tsetTopicChips([\r\n\r\n\t\t\t\t\t...topicChips,\r\n\t\t\t\t\ttopicObj,\r\n\t\t\t\t]);\r\n\t\t\t\tsetTopicLabel(\"\");\r\n\t\t\t\tsetTopicErr(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetTopicChips([...topicChips, topicObj]);\r\n\t\t\t\tsetTopicLabel(\"\");\r\n\t\t\t\tsetTopicErr(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tconst handleChange = (e) => {\r\n\t\tsetTopicLabel(e.target.value);\r\n\t\tif (topicLabel.length >= 10) {\r\n\t\t\taddChip();\r\n\t\t}\r\n\t};\r\n\tconst handleKeyPress = (e) => {\r\n\t\tif (e.key === \" \" || e.key === \"Enter\") {\r\n\t\t\taddChip();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div width=\"100%\" style={{ display: \"flex\", flexDirection: \"column\" }} >\r\n\t\t\t<TextField\r\n\t\t\t\tInputProps={{\r\n\t\t\t\t\tstartAdornment: (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{topicChips?.map((data) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: editCourse ? \"orange\" : \"#00800030\",\r\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: 1,\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: 1,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tkey={data.key}\r\n\t\t\t\t\t\t\t\t\t\tlabel={data.label}\r\n\t\t\t\t\t\t\t\t\t\tonDelete={handleDelete(data)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t),\r\n\t\t\t\t}}\r\n\t\t\t\tdisabled={topicChips.length >= 10 ? true : false}\r\n\t\t\t\tmargin=\"dense\"\r\n\t\t\t\tname=\"topicItems\"\r\n\t\t\t\tlabel=\"Topics\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tvalue={topicLabel}\r\n\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\tonKeyPress={(e) => handleKeyPress(e)}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{\r\n\t\t\t\ttopicErr ? (\r\n\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }} >\r\n\t\t\t\t\t\tPlease Add at least 1 Topic\r\n\t\t\t\t\t</p >\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t)}\r\n\t\t</div >\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst CourseOutlineComp = ({\r\n\tcourseOutlineArr,\r\n\tcoOutErr,\r\n\teditCourse,\r\n\tonChange,\r\n}) => {\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{\r\n\t\t\t\tcourseOutlineArr?.map((curObj, ind) => {\r\n\t\t\t\t\treturn (\r\n\r\n\t\t\t\t\t\t<span key={ind} >\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\tid={`${ind}`}\r\n\t\t\t\t\t\t\t\tsx={{ marginTop: 1 }}\r\n\t\t\t\t\t\t\t\tname={Object.keys(curObj)[0]}\r\n\t\t\t\t\t\t\t\tlabel={`week ${ind + 1}`}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tvalue={curObj?.week}\r\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e, ind)}\r\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tmaxLength={12}\r\n\t\t\t\t\t\t\t\tinputProps={{ maxLength: 80 }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tcoOutErr ? (\r\n\t\t\t\t\t<p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\tPlease Define Outline Of All Weeks.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\"\"\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CourseOutlineComp;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n\tTooltip, Fab, DialogTitle, DialogContent, DialogActions, Dialog, TextField, Menu,\r\n\tMenuItem, Button, Typography\r\n} from \"@mui/material/\";\r\nimport AddTopic from \"./AddTopic\";\r\nimport CourseOutlineComp from \"./CourseOutlineComp\";\r\nimport { MdUpload, MdKeyboardArrowDown } from \"react-icons/md\";\r\nimport { RiFileEditFill } from \"react-icons/ri\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { socket } from \"../App\";\r\nimport appSetting from \"../appSetting/appSetting\";\r\nimport { getCourseFunc } from \"../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst durationArr = [\"1 Week\", \"2 Weeks\", \"3 Weeks\", \"4 Weeks\"];\r\n\r\nexport default function AddCourse({ curUser, editCourse, course, setSeverity, setOpenSnack }) {\r\n\tconst uidFromLocalStorage = localStorage.getItem(\"uid\");\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [menuOpen, setMenuOpen] = useState(null);\r\n\tconst [selectDurInd, setSelectDurInd] = useState(course?.duration || null);\r\n\tconst [topicChips, setTopicChips] = useState([]);\r\n\tconst [topicErr, setTopicErr] = useState(null);\r\n\tconst [coOutErr, setCoOutErr] = useState(null);\r\n\tconst [editEditCourse, setEditEditCourse] = useState(true);\r\n\tconst [weekNotSelected, setWeekNotSelected] = useState(null);\r\n\r\n\tconst [courseOutlineArr, setCourseOutlineArr] = useState([]);\r\n\tconst dispatch = useDispatch()\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleMenuOpen = (e) => {\r\n\t\tsetWeekNotSelected(false);\r\n\t\tsetCoOutErr(false);\r\n\t\tsetMenuOpen(e.currentTarget);\r\n\t};\r\n\tconst handleMenuClose = () => {\r\n\t\tsetMenuOpen(false);\r\n\t};\r\n\tconst handleSelect = (index) => {\r\n\t\tsetEditEditCourse(false)\r\n\t\tconst objsOfCOArr = [...Array(index + 1)].map(() => {\r\n\t\t\tconst obj = { week: \"\" }\r\n\t\t\treturn obj;\r\n\t\t})\r\n\t\tsetCourseOutlineArr(objsOfCOArr)\r\n\t\tsetSelectDurInd(String(index));\r\n\t\thandleMenuClose();\r\n\r\n\t};\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tteacher_id: uidFromLocalStorage,\r\n\t\t\tteacherEmail: curUser?.email,\r\n\t\t\tteacherClass: curUser?.atClass,\r\n\t\t\tcourseName: editCourse ? course?.courseName : \"\",\r\n\t\t\tcourseDesc: editCourse ? course?.courseDesc : \"\",\r\n\t\t\ttopics: null,\r\n\t\t\tduration: null,\r\n\t\t\tcourseOutline: null,\r\n\t\t},\r\n\t\tvalidationSchema: yup.object().shape({\r\n\t\t\tcourseName: yup.string()\r\n\t\t\t\t.required(\"Course Name is Required Field.\"),\r\n\t\t\tcourseDesc: yup.string()\r\n\t\t\t\t.required(\"Course Description is Required Field.\"),\r\n\t\t}),\r\n\r\n\r\n\t\tonSubmit: async (values) => {\r\n\t\t\ttry {\r\n\t\t\t\tsetCoOutErr(false);\r\n\t\t\t\tif (topicChips.length === 0) {\r\n\t\t\t\t\tsetTopicErr(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!selectDurInd) {\r\n\t\t\t\t\t\tsetWeekNotSelected(true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst cOutlineFiltered = courseOutlineArr.filter((curElem) => curElem.week !== \"\")\r\n\t\t\t\t\t\tif (cOutlineFiltered.length !== courseOutlineArr.length) {\r\n\t\t\t\t\t\t\tsetCoOutErr(true)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvalues.topics = topicChips;\r\n\t\t\t\t\t\t\tvalues.duration = courseOutlineArr.length;\r\n\t\t\t\t\t\t\tvalues.courseOutline = courseOutlineArr;\r\n\t\t\t\t\t\t\tif (editCourse) {\r\n\t\t\t\t\t\t\t\thandleClose();\r\n\t\t\t\t\t\t\t\tconst res = await axios.post(`${appSetting.severHostedUrl}/course/editcourse`, values);\r\n\t\t\t\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\t\t\t\tif (res.data.editted) {\r\n\t\t\t\t\t\t\t\t\t\tsocket.emit(\"courseEditted\", res.data.editted)\r\n\t\t\t\t\t\t\t\t\t\tdispatch(getCourseFunc(res.data.editted))\r\n\t\t\t\t\t\t\t\t\t} if (res.data.message) {\r\n\t\t\t\t\t\t\t\t\t\tsetOpenSnack(res.data.message)\r\n\t\t\t\t\t\t\t\t\t\tsetSeverity(\"success\")\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tsetOpenSnack(res.data.error)\r\n\t\t\t\t\t\t\t\t\t\tsetSeverity(\"error\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\thandleClose();\r\n\t\t\t\t\t\t\t\tconsole.log(\"Added\", values)\r\n\t\t\t\t\t\t\t\tconst res = await axios.post(`${appSetting.severHostedUrl}/course/add`, values);\r\n\t\t\t\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\t\t\t\tsocket.emit(\"newCoursesAdded\", res.data.newCourse)\r\n\t\t\t\t\t\t\t\t\tdispatch(getCourseFunc(res.data.newCourse))\r\n\t\t\t\t\t\t\t\t\tif (res.data.message) {\r\n\t\t\t\t\t\t\t\t\t\tsetOpenSnack(res.data.message)\r\n\t\t\t\t\t\t\t\t\t\tsetSeverity(\"success\")\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tsetOpenSnack(res.data.error)\r\n\t\t\t\t\t\t\t\t\t\tsetSeverity(\"error\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\thandleClose();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tif (editCourse) {\r\n\t\t\tsetCourseOutlineArr(course?.courseOutline)\r\n\t\t} else {\r\n\t\t\tsetCourseOutlineArr([])\r\n\t\t}\r\n\t}, [])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{editCourse ? (\r\n\t\t\t\t// <>\r\n\t\t\t\t<Tooltip title=\"Edit Course\" arrow>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\t\t\tsx={{ borderRadius: 5, }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RiFileEditFill size=\"22px\" color=\"orange\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t// \t<Tooltip title=\"Delete Course\" arrow>\r\n\t\t\t\t// \t\t<Button\r\n\t\t\t\t// \t\t\tsize=\"small\"\r\n\t\t\t\t// \t\t\tonClick={(e) => delCourseFunc(e)}\r\n\t\t\t\t// \t\t\tsx={{ borderRadius: 5 }}\r\n\t\t\t\t// \t\t>\r\n\t\t\t\t// \t\t\t<FaRegTrashAlt color=\"red\" size=\"22px\" />\r\n\t\t\t\t// \t\t</Button>\r\n\t\t\t\t// \t</Tooltip>\r\n\t\t\t\t// </>\r\n\t\t\t) : (\r\n\t\t\t\t<Tooltip title=\"Add Course\" arrow>\r\n\t\t\t\t\t<Fab\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"green\",\r\n\t\t\t\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\t\t\t\tbackgroundColor: \"green\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonClick={handleClickOpen}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MdUpload size=\"20px\" color=\"#fff\" />\r\n\t\t\t\t\t</Fab>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t)}\r\n\t\t\t{/* Openning Dialouge Box */}\r\n\t\t\t<Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n\t\t\t\t<DialogTitle align=\"center\" backgroundColor=\"white\">\r\n\t\t\t\t\t{editCourse ? \"Edit Course\" : \"Create Course\"}\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"courseName\"\r\n\t\t\t\t\t\t\tlabel=\"Course Name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.courseName}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"courseName\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\t\t\t\tinputProps={{ maxLength: 12 }}\r\n\r\n\t\t\t\t\t\t// required\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.courseName && formik.touched.courseName && (\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" sx={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.courseName}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\tname=\"courseDesc\"\r\n\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tvalue={formik.values.courseDesc}\r\n\t\t\t\t\t\t\tonChange={formik.handleChange(\"courseDesc\")}\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\t\t\t\tinputProps={{ maxLength: 100 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.errors.courseDesc && formik.touched.courseDesc && (\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" sx={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t{formik.errors.courseDesc}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{/* add Topic field */}\r\n\t\t\t\t\t\t<AddTopic\r\n\t\t\t\t\t\t\ttopicChips={topicChips}\r\n\t\t\t\t\t\t\tsetTopicChips={setTopicChips}\r\n\t\t\t\t\t\t\ttopicErr={topicErr}\r\n\t\t\t\t\t\t\tsetTopicErr={setTopicErr}\r\n\t\t\t\t\t\t\teditCourse={editCourse}\r\n\t\t\t\t\t\t\tcourse={course}\r\n\t\t\t\t\t\t\tstyle={{ display: \"flex\", background: \"orange\" }}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* add duration field */}\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\thandleMenuOpen(e);\r\n\t\t\t\t\t\t\t\tsetCourseOutlineArr([]);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\t\t\t\tendIcon={<MdKeyboardArrowDown />}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* {durationArr[selectDurInd] || \"Duration\"} */}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\teditCourse && editEditCourse ? durationArr[String(selectDurInd - 1)] : durationArr[selectDurInd] || \"Duration\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tweekNotSelected ?\r\n\t\t\t\t\t\t\t\t(<Typography variant=\"body2\" sx={{ color: \"red\", marginLeft: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t\tPlease Select Duration of Your Course\r\n\t\t\t\t\t\t\t\t</Typography>) : (<></>)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\topen={Boolean(menuOpen)}\r\n\t\t\t\t\t\t\tanchorEl={menuOpen}\r\n\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{durationArr.map((item, index) => (\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(index)}\r\n\t\t\t\t\t\t\t\t\tname=\"duration\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tselectDurInd || editCourse ? (\r\n\t\t\t\t\t\t\t\t<CourseOutlineComp\r\n\t\t\t\t\t\t\t\t\tcourseOutlineArr={courseOutlineArr}\r\n\t\t\t\t\t\t\t\t\teditCourse={editCourse}\r\n\t\t\t\t\t\t\t\t\tcoOutErr={coOutErr}\r\n\t\t\t\t\t\t\t\t\tonChange={(e, index) => {\r\n\t\t\t\t\t\t\t\t\t\tsetCourseOutlineArr(prev => {\r\n\t\t\t\t\t\t\t\t\t\t\tlet tempCourse = [...prev];\r\n\t\t\t\t\t\t\t\t\t\t\ttempCourse[index].week = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\treturn tempCourse;\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={formik.handleSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{editCourse ? \"Save Edit\" : \"Create\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor={editCourse ? \"warning\" : \"success\"}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={handleClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, Typography, Chip, Grid, Button, Tooltip } from \"@mui/material\";\r\nimport Header from \"./Header\";\r\nimport AddCourse from \"./AddCourse\";\r\nimport MuiSnacks from \"./MuiSnacks\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { VscGoToFile } from \"react-icons/vsc\"\r\n\r\n\r\nconst CDTeacher = ({ curUser, course, setAuth }) => {\r\n\r\n\tconst [openSnack, setOpenSnack] = useState(\"\");\r\n\tconst [severity, setSeverity] = useState(\"\");\r\n\r\n\tlet { courseName, courseDesc, topics, duration, courseOutline } =\r\n\t\tcourse || {};\r\n\r\n\tconst history = useHistory()\r\n\treturn (\r\n\t\t<Box className={`_main`}>\r\n\t\t\t<Header curUser={curUser} setAuth={setAuth} />\r\n\t\t\t<Box width=\"95%\" maxWidth=\"1100px\" marginX=\"auto\">\r\n\t\t\t\t{openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n\t\t\t\t<Box mt={5} pb={2} display=\"flex\" borderBottom=\"1px solid #00800085\" justifyContent=\"space-between\" pb={1} px={2} width=\"100%\" >\r\n\t\t\t\t\t<Typography variant=\"h4\" color=\"green\" sx={{ textTransform: \"capitalize\" }}>\r\n\t\t\t\t\t\t{`${curUser.fname} ${curUser.lname}(${curUser.roll})`}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body1\" mt={2} color=\"green\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t!course && curUser?.atClass ? <AddCourse\r\n\t\t\t\t\t\t\t\tcurUser={curUser}\r\n\t\t\t\t\t\t\t\tcourse={course}\r\n\t\t\t\t\t\t\t\teditCourse={false}\r\n\t\t\t\t\t\t\t\tsetSeverity={setSeverity}\r\n\t\t\t\t\t\t\t\tsetOpenSnack={setOpenSnack}\r\n\t\t\t\t\t\t\t/> : !curUser?.atClass ? <Button color=\"success\" size=\"small\">Set Your Class</Button>\r\n\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Box\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\tmt={3}\r\n\t\t\t\t\tp={3}\r\n\t\t\t\t\tpt={-1}\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t// sx={{\r\n\t\t\t\t// \tbgcolor: \"background.paper\",\r\n\t\t\t\t// }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{course && Object.entries(course).length > 0 ? (\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item mt={1} sm={6} xs={12} sx={{ wordWrap: \"break-word\" }}>\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"black\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\tCourse Name:\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography ml={5} variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t{courseName}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"black\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\tDescription:\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography ml={5} variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t{courseDesc}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"black\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\tTopics:\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Box ml={4}>\r\n\t\t\t\t\t\t\t\t\t\t{topics?.map((curElem, ind) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={ind}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{ marginLeft: 1, marginBottom: 1 }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={curElem.label}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"black\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\tDuration:\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography ml={5} variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t{duration} week / weeks\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item mt={1} sm={6} xs={12} sx={{ wordWrap: \"break-word\" }}>\r\n\t\t\t\t\t\t\t\t\t<Typography color=\"black\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t\t\t\t\tCourse Outline:\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t{courseOutline?.map((curElem, ind) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<Box key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"black\" ml={5} variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tweek {ind + 1}:\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography ml={9} variant=\"body1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{curElem.week}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t{/* <EditCourse curUser={curUser} /> */}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n\t\t\t\t\t\t\t\t<AddCourse\r\n\t\t\t\t\t\t\t\t\tcurUser={curUser}\r\n\t\t\t\t\t\t\t\t\teditCourse={true}\r\n\t\t\t\t\t\t\t\t\tcourse={course}\r\n\t\t\t\t\t\t\t\t\tsetSeverity={setSeverity}\r\n\t\t\t\t\t\t\t\t\tsetOpenSnack={setOpenSnack}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Go to This Course\" arrow>\r\n\t\t\t\t\t\t\t\t\t<Button size=\"small\" sx={{ borderRadius: 5 }} onClick={() => history.push(`/${course?._id}`)}><VscGoToFile size=\"22px\" color=\"green\" /></Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t) : <Box pt={9} width=\"100%\"\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"green\">\r\n\t\t\t\t\t\t\tCurrently No Course Added\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default CDTeacher;\r\n\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary, AccordionActions, Typography,\r\n    Box, Button, Grid, Chip, Avatar, Tooltip\r\n} from '@mui/material';\r\nimport axios from \"axios\"\r\nimport { MdOutlineExpandMore } from 'react-icons/md';\r\nimport { GrUserAdd } from 'react-icons/gr';\r\nimport { socket } from '../App';\r\nimport { curUserFun } from '../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\n\r\nfunction CourseAcc({ curElem, curUser, setOpenSnack, setSeverity }) {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [hideCurrentCourse, setHideCurrentCourse] = useState(false);\r\n    const { fname, lname } = curUser\r\n    const { _id, courseDesc, courseName, courseOutline, duration, topics } = curElem\r\n    const uid = localStorage.getItem(\"uid\")\r\n    const dispatch = useDispatch()\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const applyCourse = async (e) => {\r\n        try {\r\n            const obj = {\r\n                student_name: `${fname} ${lname}`,\r\n                courseName,\r\n                course_id: _id,\r\n                student_id: uid\r\n            }\r\n            const res = await axios.post(`${appSetting.severHostedUrl}/course/applynow`, obj)\r\n            if (res) {\r\n                if (res.data.message) {\r\n                    socket.emit(\"changeInCourse\", res.data.course)\r\n                    setHideCurrentCourse(true)\r\n                    dispatch(curUserFun(res.data.student))\r\n                    setOpenSnack(res.data.message)\r\n                    setSeverity(\"success\")\r\n                } else {\r\n                    setOpenSnack(res.data.errors)\r\n                    setSeverity(\"error\")\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginBottom: 2 }}>\r\n            {hideCurrentCourse ? \"\" :\r\n                <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')} sx={{ marginTop: 1, \"&:hover\": { boxShadow: 3, cursor: \"pointer\" } }}  >\r\n                    <AccordionSummary\r\n                        expandIcon={<MdOutlineExpandMore />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                    >\r\n                        <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                            <Box minWidth=\"65px\" >\r\n                                <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{courseName[0]}</Avatar>\r\n                            </Box>\r\n                            <Typography ml={3} variant=\"body1\" color=\"green\" sx={{ wordWrap: \"break-word\", paddingX: 0.5 }}>\r\n                                {courseName}\r\n                            </Typography>\r\n                        </Box>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={6} sx={{ wordWrap: \"break-word\" }}>\r\n                                <Typography color=\"black\" variant=\"subtitle2\">\r\n                                    Course Name:\r\n                                </Typography>\r\n                                <Typography color=\"green\" ml={5} variant=\"body2\">\r\n                                    {courseName}\r\n                                </Typography>\r\n\r\n                                <Typography color=\"black\" variant=\"subtitle2\">\r\n                                    Description:\r\n                                </Typography>\r\n                                <Typography color=\"green\" ml={5} variant=\"body2\">\r\n                                    {courseDesc}\r\n                                </Typography>\r\n\r\n                                <Typography color=\"black\" variant=\"subtitle2\">\r\n                                    Topics:\r\n                                </Typography>\r\n                                <Box ml={4}>\r\n                                    {topics?.map((curElem, ind) => {\r\n                                        return (\r\n                                            <Chip\r\n                                                key={ind}\r\n                                                sx={{ marginLeft: 1, marginBottom: 1 }}\r\n                                                color=\"success\"\r\n                                                size=\"small\"\r\n                                                label={curElem.label}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        );\r\n                                    })}\r\n                                </Box>\r\n                                <Typography color=\"black\" variant=\"subtitle2\">\r\n                                    Duration:\r\n                                </Typography>\r\n                                <Typography ml={5} variant=\"body2\">\r\n                                    {duration} week / weeks\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} sx={{ wordWrap: \"break-word\" }}>\r\n                                <Typography color=\"black\" variant=\"subtitle2\">\r\n                                    Course Outline:\r\n                                </Typography>\r\n                                {courseOutline?.map((curElem, ind) => {\r\n                                    return (\r\n                                        <Box key={ind}>\r\n                                            <Typography color=\"black\" ml={5} variant=\"body1\">\r\n                                                week {ind + 1}:\r\n                                            </Typography>\r\n                                            <Typography color=\"green\" ml={9} variant=\"body2\">\r\n                                                {curElem.week}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    );\r\n                                })}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </AccordionDetails>\r\n                    <AccordionActions>\r\n                        <Tooltip title=\"Enroll Now\" arrow>\r\n                            <Button variant=\"contained\" color=\"success\" onClick={(e) => applyCourse(e)}><GrUserAdd color=\"green\" size=\"22px\" /></Button>\r\n                        </Tooltip>\r\n                    </AccordionActions>\r\n                </Accordion>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseAcc","import React, { useState } from 'react'\r\nimport { Tabs, Tab, Box } from \"@mui/material\"\r\n\r\nconst TabsComp = ({ tab1Label, tab2Label, tab3Label, tab4Label, panel1, panel2, panel3, panel4 }) => {\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n\r\n    const handleTabs = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Box>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleTabs}\r\n                    textColor=\"inherit\"\r\n                    scrollButtons='auto'\r\n                    variant=\"scrollable\"\r\n                    TabIndicatorProps={{\r\n                        sx: {\r\n                            backgroundColor: \"green\",\r\n                            height: \"5px\",\r\n                        },\r\n                    }}\r\n                >\r\n                    <Tab label={tab1Label} />\r\n                    <Tab label={tab2Label} />\r\n                    {tab3Label ? (\r\n                        <Tab label={tab3Label} />\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                    {tab4Label ? (\r\n                        <Tab label={tab4Label} />\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>{panel1}</TabPanel>\r\n            <TabPanel value={value} index={1}>{panel2}</TabPanel>\r\n            {panel3 ? (\r\n                <TabPanel value={value} index={2}>{panel3}</TabPanel>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            {panel4 ? (\r\n                <TabPanel value={value} index={3}>{panel4}</TabPanel>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index } = props;\r\n    return (\r\n        <Box width=\"100%\" sx={{ marginX: \"auto\", padding: \"5px\" }}>\r\n            {value === index && <> {children} </>}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default TabsComp\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Typography,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    Chip,\r\n    Avatar,\r\n    Tooltip\r\n} from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from \"axios\"\r\nimport { MdOutlineExpandMore } from 'react-icons/md';\r\n// import { IoTrashBinSharp } from 'react-icons/io5';\r\nimport { AiOutlineExclamationCircle } from \"react-icons/ai\"\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\n\r\nconst StudentTab2 = ({ curCor, ind }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const [thisCourse, setThisCourse] = useState({});\r\n    const [allCourses, setAllCourses] = useState([]);\r\n\r\n    const history = useHistory()\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const { courseName, courseDesc, topics, duration, courseOutline } = thisCourse\r\n\r\n    // const delCourse = async (e) => {\r\n    //     try {\r\n    //         const obj = {\r\n    //             student_id: uid,\r\n    //             course_id: curCor?.id,\r\n    //         }\r\n    //         const res = await axios.post(`${appSetting.severHostedUrl}/course/delencourse`, obj)\r\n    //         console.log(res.data.message ? res.data.message : res.data.error)\r\n    //     } catch (error) {\r\n    //         console.log(error)\r\n    //     }\r\n    // }\r\n    const curCourseDetails = async () => {\r\n        try {\r\n            const findLocally = allCourses?.find(item => item._id === curCor.id)\r\n            if (findLocally) {\r\n                setThisCourse(findLocally)\r\n            } else {\r\n                const res = await axios.post(`${appSetting.severHostedUrl}/course/getcourse`, { id: curCor.id })\r\n                setThisCourse(res.data.DBcourse)\r\n                setAllCourses([...allCourses, res.data.DBcourse])\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginBottom: 2, width: \"100%\" }}>\r\n            <Accordion width=\"100%\" expanded={expanded === 'panel1'} onClick={curCourseDetails} onChange={handleChange('panel1')} sx={{ marginTop: 1, \"&:hover\": { boxShadow: 3, cursor: \"pointer\" } }}  >\r\n                <AccordionSummary\r\n                    expandIcon={<MdOutlineExpandMore onClick={curCourseDetails} />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >\r\n                    <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\" flexGrow={1}>\r\n                            <Box minWidth=\"65px\" >\r\n                                <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{curCor?.name[0]}</Avatar>\r\n                            </Box>\r\n                            <Typography ml={3} variant=\"body1\" color=\"green\" sx={{ wordWrap: \"break-word\", paddingX: 0.5 }}>\r\n                                {curCor?.name}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Tooltip title=\"Preview\">\r\n                            <Button color=\"success\" onClick={(e) => history.push(`/${curCor?.id}`)} > <AiOutlineExclamationCircle color=\"black\" size=\"22px\" /></Button>\r\n                        </Tooltip>\r\n                    </Box>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container display=\"flex\">\r\n                        <Grid item xs={12} sm={6} sx={{ wordWrap: \"break-word\" }}>\r\n                            <Typography color=\"black\" variant=\"subtitle2\">\r\n                                Course Name:\r\n                            </Typography>\r\n                            <Typography color=\"green\" ml={5} variant=\"body2\">\r\n                                {courseName}\r\n                            </Typography>\r\n\r\n                            <Typography color=\"black\" variant=\"subtitle2\">\r\n                                Description:\r\n                            </Typography>\r\n                            <Typography color=\"green\" ml={5} variant=\"body2\">\r\n                                {courseDesc}\r\n                            </Typography>\r\n\r\n                            <Typography color=\"black\" variant=\"subtitle2\">\r\n                                Topics:\r\n                            </Typography>\r\n                            <Box ml={4}>\r\n                                {topics?.map((curElem, ind) => {\r\n                                    return (\r\n                                        <Chip\r\n                                            key={ind}\r\n                                            sx={{ marginLeft: 1, marginBottom: 1 }}\r\n                                            color=\"success\"\r\n                                            size=\"small\"\r\n                                            label={curElem.label}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </Box>\r\n                            <Typography color=\"black\" variant=\"subtitle2\">\r\n                                Duration:\r\n                            </Typography>\r\n                            <Typography ml={5} variant=\"body2\">\r\n                                {duration} week / weeks\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} sx={{ wordWrap: \"break-word\" }}>\r\n                            <Typography color=\"black\" variant=\"subtitle2\">\r\n                                Course Outline:\r\n                            </Typography>\r\n                            {courseOutline?.map((curElem, ind) => {\r\n                                return (\r\n                                    <Box key={ind}>\r\n                                        <Typography color=\"black\" ml={5} variant=\"body1\">\r\n                                            week {ind + 1}:\r\n                                        </Typography>\r\n                                        <Typography color=\"green\" ml={9} variant=\"body2\">\r\n                                            {curElem.week}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                );\r\n                            })}\r\n                            {/* <AccordionActions>\r\n                                <Tooltip title=\"Delete Course\">\r\n                                    <Button color=\"error\" onClick={(e) => delCourse(e)}> <IoTrashBinSharp color=\"red\" size=\"22px\" /></Button>\r\n                                </Tooltip>\r\n                            </AccordionActions> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default StudentTab2","import React, { useEffect, useState } from 'react'\r\nimport Header from './Header'\r\nimport { Box, Typography, } from \"@mui/material\"\r\nimport CourseAcc from './CourseAcc'\r\nimport TabsComp from './TabsComp'\r\nimport StudentTab2 from './StudentTab2'\r\nimport axios from 'axios'\r\nimport MuiSnacks from './MuiSnacks'\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\nconst CDStudent = ({ curUser, courses, setAuth }) => {\r\n    const [removedByTeacherState, setRemovedByTeacherState] = useState(true)\r\n\r\n    const [openSnack, setOpenSnack] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n\r\n    const CDstudentStartFunction = async () => {\r\n        try {\r\n            const deleteCoursesIDsArr = curUser?.courses?.filter(course =>\r\n                course.removedByTeacher === true)\r\n            // .map(course => course.id)\r\n\r\n            if (deleteCoursesIDsArr) {\r\n                await axios.post(`${appSetting.severHostedUrl}/course/delcoursefromstudent`, { id: curUser?._id })\r\n                setTimeout(() => {\r\n                    setRemovedByTeacherState(false)\r\n                }, 60000);\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        CDstudentStartFunction()\r\n    }, [])\r\n    return (\r\n        <Box className=\"_main\" >\r\n            <Header curUser={curUser} setAuth={setAuth} />\r\n            <Box width=\"100%\">\r\n                {openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n                <Box mx=\"auto\" mt={2} maxWidth=\"800px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" >\r\n                    <TabsComp\r\n                        tab1Label=\"Available Courses\"\r\n                        panel1={<Box width=\"100%\" mt={4.2}>\r\n                            <Box mb={2} display=\"flex\" justifyContent=\"space-between\" pb={1} px={2} borderBottom=\"1.5px solid #009c0052\" width=\"100%\" >\r\n                                <Typography variant=\"h4\" color=\"green\">\r\n                                    Available Courses\r\n                                </Typography>\r\n                            </Box>\r\n                            {\r\n                                courses?.length > 0 && curUser?.atClass ?\r\n                                    courses?.map((curElem, ind) => {\r\n                                        return <CourseAcc\r\n                                            setOpenSnack={setOpenSnack}\r\n                                            setSeverity={setSeverity}\r\n                                            key={ind}\r\n                                            curElem={curElem}\r\n                                            curUser={curUser}\r\n                                        />\r\n                                    }) : !curUser?.atClass ? <Box pt={9} width=\"100%\"\r\n                                        textAlign=\"center\"\r\n                                    >\r\n                                        <Typography variant=\"h6\" color=\"green\">\r\n                                            Please Set Your class to get Available Courses..\r\n                                        </Typography>\r\n                                    </Box>\r\n                                        : <Box pt={9} width=\"100%\"\r\n                                            textAlign=\"center\"\r\n                                        >\r\n                                            <Typography variant=\"h6\" color=\"green\">\r\n                                                Currently No Course Available...\r\n                                            </Typography>\r\n                                        </Box>\r\n                            }\r\n                        </Box>}\r\n\r\n                        tab2Label=\"Enrolled Courses\"\r\n                        panel2={\r\n                            <Box width=\"100%\" mt={3}>\r\n                                <Box mb={2} display=\"flex\" justifyContent=\"space-between\" pb={1} px={2} borderBottom=\"1.5px solid #009c0052\" width=\"100%\" >\r\n                                    <Typography variant=\"h4\" color=\"green\">\r\n                                        Enrolled Courses\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Box>\r\n                                    {\r\n                                        curUser?.courses?.length > 0 ?\r\n                                            curUser?.courses.map((curCor, ind) => {\r\n                                                return (\r\n                                                    curCor.removedByTeacher &&\r\n                                                        removedByTeacherState ? <Box\r\n                                                            key={ind}\r\n                                                            width=\"100%\"\r\n                                                            textAlign=\"center\"\r\n                                                            mt={1} py={2}\r\n                                                            sx={{\r\n                                                                borderRadius: 1,\r\n                                                                backgroundColor: \"#ff0000d1\",\r\n                                                                \"&:hover\": { boxShadow: 3, cursor: \"pointer\" }\r\n                                                            }}\r\n                                                        >\r\n                                                        <Typography variant=\"body1\" color=\"white\">\r\n                                                            You Were Removed from \"{curCor.name}\"\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                        : <StudentTab2\r\n                                                            curCor={curCor}\r\n                                                            key={ind}\r\n                                                            ind={ind}\r\n                                                        />\r\n                                                )\r\n                                            }) : <Box pt={9} width=\"100%\"\r\n                                                textAlign=\"center\"\r\n                                            >\r\n                                                <Typography variant=\"h6\" color=\"green\">\r\n                                                    Currently Not Enrolled In Any Course...\r\n                                                </Typography>\r\n                                            </Box>\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n                        }\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default CDStudent\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CDTeacher from \"./CDTeacher\";\r\nimport CDStudent from \"./CDStudent\";\r\n\r\nconst CourseDetails = ({ curUser, setAuth }) => {\r\n\r\n\tconst course = useSelector((state) => state.usersReducer.course);\r\n\tconst courses = useSelector((state) => state.usersReducer.studentCourse);\r\n\r\n\r\n\r\n\tif (curUser.roll === \"teacher\") {\r\n\t\treturn <CDTeacher curUser={curUser} course={course} setAuth={setAuth} />;\r\n\t} else {\r\n\t\treturn <CDStudent curUser={curUser} courses={courses} setAuth={setAuth} />;\r\n\t}\r\n};\r\n\r\nexport default CourseDetails;\r\n","import React from \"react\"\r\nimport { Box, Avatar, TextField } from \"@mui/material\"\r\nimport { AiOutlineSend } from \"react-icons/ai\"\r\n\r\nconst SendingMessageInputComp = ({ userName, autoFocus, placeholder, value, setValue, name, color, submitFunc, type }) => {\r\n    return (\r\n        <Box sx={{ width: \"100%\", borderRadius: \"7.5px\", marginTop: 1, marginBottom: 2, justifySelf: \"flex-end\", padding: \"1rem 1.5rem\", border: \"1.8px solid #00000033\" }}>\r\n            <Box width=\"100%\">\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box width=\"65px\" >\r\n                        <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{userName}</Avatar>\r\n                    </Box>\r\n                    <Box flexGrow={1}>\r\n                        <TextField\r\n                            autoFocus={autoFocus}\r\n                            name={name}\r\n                            type={type}\r\n                            placeholder={placeholder}\r\n                            value={value}\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            autoComplete=\"off\"\r\n                            fullWidth\r\n                            multiline\r\n                            color={color}\r\n                            InputProps={{\r\n                                endAdornment: (<AiOutlineSend onClick={(e) => submitFunc(e)} size=\"26px\" color=\"green\" style={{ margin: \"auto 1 0 0\" }} />)\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SendingMessageInputComp","import React from \"react\"\r\nimport { Box, Avatar, Typography } from \"@mui/material\"\r\n\r\nconst MessageBox = ({ color, timeColor, nameFirestLetter, name, time, message }) => {\r\n\r\n    return (\r\n        <Box sx={{ width: \"100%\", borderRadius: \"7.5px\", marginTop: 3, padding: \"1rem 1.5rem\", border: \"1.8px solid #00000033\" }}>\r\n            <Box width=\"100%\">\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Box width=\"65px\" >\r\n                        <Avatar sx={{ bgcolor: color, textTransform: \"capitalize\" }}>{nameFirestLetter}</Avatar>\r\n                    </Box>\r\n                    <Box flexGrow={1}>\r\n                        <Typography variant=\"subtitle1\" color={color}><b>{name}</b></Typography>\r\n                        <Typography variant=\"body2\" color={timeColor}> {time}</Typography>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            <Box width=\"100%\" mt={2} sx={{ wordWrap: \"break-word\", paddingLeft: 5 }}>\r\n                <Typography variant=\"subtitle2\">{message}</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MessageBox","import React, { useEffect, useState } from 'react'\r\nimport { Box, Typography } from '@mui/material'\r\nimport SendingMessageInputComp from \"./SendingMessageInputComp\"\r\nimport streamImg from \"../images/stream.jpg\"\r\nimport MessageBox from \"./MessageBox\"\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport Spinner from './Spinner'\r\nimport MuiSnacks from \"./MuiSnacks\"\r\nimport { socket } from '../App'\r\nimport { currentCourseFunc } from '../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\n\r\nconst Stream = ({ curUser, currentCourse }) => {\r\n    const [message, setMessage] = useState(\"\")\r\n    const [isMuted, setIsMuted] = useState(false)\r\n\r\n    const [openSnack, setOpenSnack] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (currentCourse && curUser) {\r\n            const findStudentInCourse = currentCourse?.students?.find(student => student.id === curUser?._id)\r\n            if (findStudentInCourse?.muted) {\r\n                setIsMuted(true)\r\n            } else {\r\n                setIsMuted(false)\r\n            }\r\n        }\r\n    })\r\n\r\n    const { _id, fname, lname } = curUser || {}\r\n    const submitFunc = async (e) => {\r\n        try {\r\n            const newMessage = message.trim()\r\n            if (newMessage) {\r\n                const name = `${fname} ${lname}`\r\n                let time = moment().format('hh:mm A')\r\n                const messageObj = {\r\n                    id: _id, name, time, message: newMessage, courseID: currentCourse?._id\r\n                }\r\n                const res = await axios.post(`${appSetting.severHostedUrl}/course/sendmessage`, messageObj)\r\n                if (res) {\r\n                    setMessage(\"\")\r\n                    if (res.data.message) {\r\n                        socket.emit(\"msgSentInStream\", res.data.course)\r\n                        dispatch(currentCourseFunc(res.data.course))\r\n                        setOpenSnack(res.data.message)\r\n                        setSeverity(\"success\")\r\n                    } else {\r\n                        setOpenSnack(res.data.error)\r\n                        setSeverity(\"error\")\r\n                    }\r\n                }\r\n            } else {\r\n                setOpenSnack(\"Please write something\")\r\n                setSeverity(\"error\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    if (!currentCourse) { return <Spinner /> }\r\n\r\n    return (\r\n        <Box maxWidth=\"1100px\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" sx={{ marginX: \"auto\" }}>\r\n            {openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n            <Box sx={{ width: \"100%\", height: \"240px\", borderRadius: \"10px\", marginTop: 3 }}>\r\n                <img src={streamImg} width=\"100%\" height=\"100%\" style={{ borderRadius: \"10px\" }} alt=\"BackGround Image\" />\r\n            </Box>\r\n            {\r\n                currentCourse?.chat?.map((currentMessage, index) => {\r\n                    return (\r\n                        <MessageBox\r\n                            color={curUser?._id === currentMessage?.id ? \"green\" : \"#ba000d\"}\r\n                            timeColor={curUser?._id === currentMessage?.id ? \"#2e7d32de\" : \"#ba000db8\"}\r\n                            curUser={curUser}\r\n                            key={index}\r\n                            nameFirestLetter={currentMessage.name[0]}\r\n                            name={curUser?._id === currentMessage?.id ? \"Me\" : currentMessage.name}\r\n                            time={currentMessage.time}\r\n                            message={currentMessage.message}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                !isMuted ? <SendingMessageInputComp\r\n                    name=\"message\"\r\n                    autoFocus={true}\r\n                    value={message}\r\n                    setValue={setMessage}\r\n                    placeholder=\"Add comment to All Students\"\r\n                    color=\"success\"\r\n                    submitFunc={submitFunc}\r\n                    userName={curUser?.fname[0]}\r\n                /> : <Box mt={3} border=\"1px solid red\" borderRadius={2} width=\"100%\" py={3} textAlign=\"center\">\r\n                    <Typography variant=\"h6\" color=\"red\">You Can't send Message Because You're Muted...</Typography>\r\n                </Box>\r\n            }\r\n\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default Stream\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Avatar, Typography, Button } from \"@mui/material\"\r\nimport SendingMessageInputComp from \"./SendingMessageInputComp\"\r\nimport MessageBox from \"./MessageBox\"\r\nimport { GrAnnounce } from \"react-icons/gr\"\r\nimport moment from \"moment\"\r\nimport axios from \"axios\"\r\nimport MuiSnacks from './MuiSnacks';\r\nimport appSetting from '../appSetting/appSetting'\r\nimport { socket } from '../App'\r\n\r\n\r\nconst Announcement = ({ currentCourse, curUser }) => {\r\n    const [courseAnnouncments, setCourseAnnouncments] = useState(null)\r\n    const [showInput, setShowInput] = useState(false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const [openSnack, setOpenSnack] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n\r\n    const toggle = () => {\r\n        if (showInput) {\r\n            setShowInput(false)\r\n        } else {\r\n            setShowInput(true)\r\n        }\r\n    }\r\n    const { _id, fname, lname } = curUser || {}\r\n    const submitFunc = async (e) => {\r\n        try {\r\n            const newMessage = message.trim()\r\n\r\n            if (newMessage) {\r\n                const name = `${fname} ${lname}`\r\n                let time = moment().format('hh:mm A')\r\n                const announcementObj = {\r\n                    id: _id, name, time, message: newMessage, courseID: currentCourse?._id\r\n                }\r\n                const res = await axios.post(`${appSetting.severHostedUrl}/course/announcement`, announcementObj)\r\n                if (res) {\r\n                    setMessage(\"\")\r\n                    toggle()\r\n                    if (res.data.message) {\r\n                        setOpenSnack(res.data.message)\r\n                        setSeverity(\"success\")\r\n                        socket.emit(\"changeInCourse\", res.data.course)\r\n                        setCourseAnnouncments(res.data.course.announcement)\r\n                    } else {\r\n                        setOpenSnack(res.data.error)\r\n                        setSeverity(\"error\")\r\n                    }\r\n                }\r\n            } else {\r\n                setOpenSnack(\"Write something\")\r\n                setSeverity(\"error\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setCourseAnnouncments(currentCourse?.announcement)\r\n    }, [currentCourse])\r\n    return (\r\n        <Box\r\n            maxWidth=\"1100px\" minHeight=\"77vh\"\r\n            display=\"flex\" flexDirection=\"column\"\r\n            sx={{ marginX: \"auto\" }}\r\n        >\r\n            {openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n            {curUser?.roll === \"teacher\" ? (\r\n                <div>\r\n                    {showInput ? <SendingMessageInputComp\r\n                        name=\"announce\"\r\n                        autoFocus={true}\r\n                        value={message}\r\n                        setValue={setMessage}\r\n                        type=\"text\"\r\n                        placeholder=\"Write Announcement\"\r\n                        color=\"success\"\r\n                        submitFunc={submitFunc}\r\n                        userName={curUser?.fname[0]}\r\n                    /> : \"\"\r\n                    }\r\n                    {/* Announce SomeThing to Your Class */}\r\n                    <Box onClick={toggle} sx={{ width: \"100%\", \"&:hover\": { color: \"green\", cursor: \"pointer\" }, borderRadius: \"12px\", backgroundColor: \"#00710012\", padding: \"1rem 1.5rem\", boxShadow: 4 }}>\r\n                        <Box width=\"100%\">\r\n                            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <Box width=\"65px\" >\r\n                                    <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>r</Avatar>\r\n                                </Box>\r\n                                <Box flexGrow={1} >\r\n                                    <Typography color=\"#0000009c\" sx={{ fontSize: \"14px\", \"&:hover\": { color: \"green\", cursor: \"pointer\", textDecoration: \"underline\" } }}>Announce Something to Your Students</Typography>\r\n                                </Box>\r\n                                <Box >\r\n                                    <Button\r\n                                        sx={{ borderRadius: 5 }}\r\n                                        size=\"small\"\r\n                                    >\r\n                                        <GrAnnounce size=\"23px\" />\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                </div>\r\n            ) : (<Box borderBottom=\"1px solid #00800059\" display=\"flex\" justifyContent=\"flex-start\" pb={2} px={2} width=\"100%\" >\r\n                <Typography variant=\"h4\" color=\"green\">\r\n                    Announcements\r\n                </Typography>\r\n            </Box>)\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            {/* Announces */}\r\n            {\r\n                courseAnnouncments?.map((currentMessage, index) => {\r\n                    return (\r\n\r\n                        <MessageBox\r\n                            color={\"green\"}\r\n                            timeColor={\"#2e7d32de\"}\r\n                            curUser={curUser}\r\n                            key={index}\r\n                            nameFirestLetter={currentMessage.name[0]}\r\n                            name={curUser?._id === currentMessage?.id ? \"Me\" : currentMessage.name}\r\n                            time={currentMessage.time}\r\n                            message={currentMessage.message}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n            {/* <MessageBox\r\n                    nameFirestLetter=\"A\"\r\n                    name=\"Teacher\"\r\n                    time=\"09:45pm\"\r\n                    message=\"Bilal Ehsasn Is the Best Teacher wohooooo\"\r\n                /> */}\r\n        </Box >\r\n    )\r\n}\r\n\r\n\r\nexport default Announcement\r\n\r\n","import React, { useState } from 'react';\r\nimport { Box, Typography, Avatar, Menu, MenuItem, Button } from '@mui/material';\r\nimport { FiMoreVertical } from \"react-icons/fi\";\r\nimport SendingMessageInputComp from \"./SendingMessageInputComp\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { socket } from '../App';\r\nimport MuiSnacks from './MuiSnacks';\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\nconst CourseStudentsComp = ({ currentCourse, curUser, }) => {\r\n    const [courseStudents, setCourseStudents] = useState(currentCourse?.students);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [studentID, setStudentID] = useState(\"\");\r\n    const [studentName, setStudentName] = useState(\"\");\r\n\r\n    const [openSnack, setOpenSnack] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    const { _id, fname, lname } = curUser || {}\r\n\r\n    const handleClick = (event) => {\r\n        setStudentID(\"\")\r\n        setMessage(\"\")\r\n        setStudentName(\"\")\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const removeStudentFunc = async (id) => {\r\n        try {\r\n            const reqObj = { studentID: id, courseID: currentCourse?._id }\r\n            const res = await axios.post(`${appSetting.severHostedUrl}/course/delspecificstudent`, reqObj)\r\n            if (res) {\r\n                if (res.data.message) {\r\n                    socket.emit(\"changeInCourse\", res.data.course)\r\n                    setCourseStudents(res.data.course.students)\r\n                    setOpenSnack(res.data.message)\r\n                    setSeverity(\"success\")\r\n                } else {\r\n                    setOpenSnack(res.data.error)\r\n                    setSeverity(\"error\")\r\n                }\r\n            }\r\n            handleClose()\r\n        } catch (error) {\r\n            console.log(error)\r\n            handleClose()\r\n        }\r\n    }\r\n    const muteStudentFunc = async (id) => {\r\n        try {\r\n            handleClose()\r\n            const res = await axios.post(`${appSetting.severHostedUrl}/course/mutestudent`, { courseID: currentCourse?._id, studentID: id })\r\n            if (res) {\r\n                socket.emit(\"changeInCourse\", res.data.course)\r\n                setCourseStudents(res.data.course.students)\r\n                if (res.data.message) {\r\n                    setOpenSnack(res.data.message)\r\n                    setSeverity(\"success\")\r\n                } else {\r\n                    setOpenSnack(res.data.error)\r\n                    setSeverity(\"error\")\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            handleClose()\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const sendMsgFunc = async (e) => {\r\n        try {\r\n            const newMessage = message.trim()\r\n\r\n            if (newMessage) {\r\n                const name = `${fname} ${lname}`\r\n                let time = moment().format('hh:mm:ss A')\r\n                const messageObj = {\r\n                    senderID: _id, senderName: name, time,\r\n                    message: newMessage, recieverID: studentID,\r\n                    recieverName: studentName\r\n                }\r\n                const res = await axios.post(`${appSetting.severHostedUrl}/user/sendmsg`, messageObj)\r\n                if (res) {\r\n                    if (res.data.message) {\r\n                        setOpenSnack(res.data.message)\r\n                        setSeverity(\"success\")\r\n                    } else {\r\n                        setOpenSnack(res.data.error)\r\n                        setSeverity(\"error\")\r\n                    }\r\n                    setMessage(\"\")\r\n                    setStudentID(\"\")\r\n                    setStudentName(\"\")\r\n                }\r\n            } else {\r\n                setOpenSnack(\"write something\")\r\n                setSeverity(\"error\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Box sx={{ maxWidth: \"760px\", margin: \"0 auto\" }}>\r\n                {openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n                <Box display=\"flex\" justifyContent=\"space-between\" pb={1} px={2} borderBottom=\"1.5px solid #009c0052\" width=\"100%\" >\r\n                    <Typography variant=\"h4\" color=\"green\">\r\n                        Students\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" mt={3} color=\"green\">\r\n                        {currentCourse?.students?.length > 0 ? courseStudents.length : \"No\"} students\r\n                    </Typography>\r\n                </Box>\r\n\r\n                {currentCourse?.students?.length > 0 ?\r\n                    courseStudents.map((currentStudent, index) => {\r\n                        return (\r\n                            <Box key={index}>\r\n                                <Box p=\"10px 20px\" mt={1} width=\"85%\" display=\"flex\" justifyContent=\"space-between\" sx={{ borderRadius: \"10px\", \"&:hover\": { backgroundColor: \"#009c0026\", boxShadow: 3, cursor: \"pointer\" } }} width=\"100%\" >\r\n                                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                        <Box minWidth=\"65px\" >\r\n                                            <Avatar sizes=\"50px\" sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{currentStudent.name[0]}</Avatar>\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <Typography sx={{ fontSize: \"16px\", }}>{currentStudent.name}</Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                    {/* 3 dots */}\r\n                                    <Button\r\n                                        id=\"basic-button\"\r\n                                        sx={{ color: \"black\", borderRadius: 5 }}\r\n                                        aria-controls=\"basic-menu\"\r\n                                        aria-haspopup=\"true\"\r\n                                        aria-expanded={open ? 'true' : undefined}\r\n                                        onClick={handleClick}\r\n                                        size=\"small\"\r\n                                    >\r\n                                        <FiMoreVertical size=\"23px\" style={{ margin: \"auto 0px\" }} />\r\n                                    </Button>\r\n                                    <Menu\r\n                                        id=\"basic-menu\"\r\n                                        anchorEl={anchorEl}\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                        MenuListProps={{\r\n                                            'aria-labelledby': 'basic-button',\r\n                                        }}\r\n                                    >\r\n                                        <MenuItem onClick={() => {\r\n                                            setStudentID(currentStudent.id);\r\n                                            setStudentName(currentStudent.name)\r\n                                            handleClose()\r\n                                        }}>\r\n                                            Send Message to {currentStudent?.name}</MenuItem>\r\n                                        <MenuItem onClick={() => removeStudentFunc(currentStudent.id)}>Remove</MenuItem>\r\n                                        <MenuItem onClick={() => muteStudentFunc(currentStudent.id)}>{currentStudent.muted ? \"Unmute\" : \"Mute\"}</MenuItem>\r\n                                    </Menu>\r\n                                </Box>\r\n                                {studentID ? <SendingMessageInputComp\r\n                                    name=\"message\"\r\n                                    autoFocus={true}\r\n                                    value={message}\r\n                                    setValue={setMessage}\r\n                                    type=\"text\"\r\n                                    placeholder={`Write Message for this student`}\r\n                                    color=\"success\"\r\n                                    submitFunc={sendMsgFunc}\r\n                                    userName={curUser?.fname[0]}\r\n                                /> : \"\"\r\n                                }\r\n                            </Box>\r\n                        )\r\n                    }) : <Box pt={9} width=\"100%\"\r\n                        textAlign=\"center\"\r\n                    >\r\n                        <Typography variant=\"h6\" color=\"green\">\r\n                            Currently No Students...\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CourseStudentsComp\r\n\r\n","import React, { useState } from 'react'\r\nimport { GrAttachment } from \"react-icons/gr\"\r\nimport {\r\n    Button,\r\n    Tooltip,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogActions,\r\n    DialogTitle,\r\n    TextField,\r\n    Typography,\r\n    Box\r\n} from \"@mui/material\"\r\nimport { useFormik } from 'formik'\r\nimport *as yup from \"yup\"\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { socket } from '../App'\r\nimport { useDispatch } from 'react-redux'\r\nimport { settingAssignments } from '../redux/actions'\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\nconst Assignment = ({\r\n    currentCourse, btnTitle, tooltipTitle, curUser, btnIcon, dialogTitle, actionTitle,\r\n    isTeacher, btnStartIcon, btnColor, btnVariant, currentAssignment, input2label,\r\n    setOpenSnack, setSeverity, setAllAssignments\r\n}) => {\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false)\r\n    const [file, setFile] = useState(null)\r\n\r\n    const handleDialog = () => {\r\n        setOpenAssignDialog(true)\r\n    }\r\n    const closeDialog = () => {\r\n        setOpenAssignDialog(false)\r\n    }\r\n    const dispatch = useDispatch()\r\n    const handleChange = (e) => {\r\n        const selectedFile = e.target.files[0]\r\n        if (selectedFile) {\r\n            const size = ((selectedFile.size / 1024) / 1024)\r\n            if (size > 10) {\r\n                setOpenSnack(\"file Size is too long\")\r\n                setSeverity(\"error\")\r\n            } else {\r\n                setFile(selectedFile)\r\n            }\r\n        }\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: isTeacher ? \"\" : currentAssignment?.title,\r\n            desc: \"\",\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            title: yup.string().required(\"Title is Required Field...\"),\r\n        }),\r\n\r\n        onSubmit: async (values) => {\r\n            try {\r\n                if (!file && !values.desc) {\r\n                    setOpenSnack(\"You cannot leave both files and description blank at the same time\")\r\n                    setSeverity(\"error\")\r\n                } else {\r\n                    let formData = new FormData();\r\n                    if (!values.desc && file) {\r\n                        formData.append(\"myFile\", file)\r\n                    } else if (!file && values.desc) {\r\n                        formData.append(\"desc\", values.desc)\r\n                    } else {\r\n                        formData.append(\"desc\", values.desc)\r\n                        formData.append(\"myFile\", file)\r\n                    }\r\n                    const config = {\r\n                        headers: { \"content-type\": \"multipart/form-data\" },\r\n                    };\r\n                    if (isTeacher) {\r\n                        formData.append(\"title\", values.title)\r\n                        formData.append(\"courseID\", currentCourse?._id)\r\n                        const res = await axios.post(`${appSetting.severHostedUrl}/assignment/add`, formData, config)\r\n                        if (res) {\r\n                            closeDialog()\r\n                            setFile(null)\r\n                            values = {}\r\n                            if (res.data.message) {\r\n                                setAllAssignments(res.data.allAssignment)\r\n                                console.log(\"res.data.assignment\", res.data.allAssignment)\r\n                                socket.emit(\"assignmentAdd\", res.data.allAssignment)\r\n                                dispatch(settingAssignments(res.data.allAssignment))\r\n                                setOpenSnack(res.data.message)\r\n                                setSeverity(\"success\")\r\n                            } else {\r\n                                setOpenSnack(res.data.error)\r\n                                setSeverity(\"error\")\r\n                            }\r\n                        }\r\n                    } else {\r\n                        formData.append(\"assignmentID\", currentAssignment?._id)\r\n                        formData.append(\"id\", `${curUser?._id}`)\r\n                        formData.append(\"name\", `${curUser?.fname} ${curUser?.lname}`)\r\n                        formData.append(\"time\", moment().format(\"hh:mm:ss A\"))\r\n                        closeDialog()\r\n                        const res = await axios.post(`${appSetting.severHostedUrl}/assignment/submit`, formData, config)\r\n                        if (res) {\r\n                            setFile(null)\r\n                            socket.emit(\"changeInAssignment\", res.data.assignment)\r\n                            if (res.data.message) {\r\n                                setOpenSnack(res.data.message)\r\n                                setSeverity(\"success\")\r\n                            } else {\r\n                                setOpenSnack(res.data.error)\r\n                                setSeverity(\"error\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                closeDialog()\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={tooltipTitle} arrow>\r\n                <Button startIcon={btnStartIcon} onClick={handleDialog} color={btnColor}\r\n                    sx={{ marginTop: isTeacher ? 3 : 0, borderRadius: 5 }} variant={btnVariant}>{btnTitle || btnIcon}</Button>\r\n            </Tooltip>\r\n            <Dialog open={openAssignDialog} onClose={closeDialog} fullWidth maxWidth=\"sm\">\r\n                <DialogTitle>{dialogTitle}</DialogTitle>\r\n                <DialogContent >\r\n                    <form method=\"POST\">\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"title\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            variant=\"filled\"\r\n                            value={isTeacher ? formik.values.title : currentAssignment?.title}\r\n                            onChange={formik.handleChange(\"title\")}\r\n                            autoComplete=\"off\"\r\n                            disabled={isTeacher ? false : true}\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            inputProps={{ maxLength: 32, required: true }}\r\n                        />\r\n                        {formik.errors.title && formik.touched.title && (\r\n                            <p style={{ color: \"red\", marginLeft: \"5px\" }}>\r\n                                {formik.errors.title}\r\n                            </p>\r\n                        )}\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            name=\"desc\"\r\n                            label={input2label}\r\n                            type=\"text\"\r\n                            variant=\"filled\"\r\n                            value={formik.values.desc}\r\n                            onChange={formik.handleChange(\"desc\")}\r\n                            autoComplete=\"off\"\r\n                            fullWidth\r\n                            color=\"success\"\r\n                            multiline\r\n                            minRows={2}\r\n                            inputProps={{ maxLength: 500 }}\r\n                        />\r\n                        <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n                            <Box border=\"1px solid rgba(0, 0, 0, 0.09)\" px={\"14px\"} mt={1} py={\"7px\"} flexGrow={1}><Typography variant=\"subtitle1\">\r\n                                {file ? file.name : \"No File Selected\"}\r\n                            </Typography></Box>\r\n                            <Tooltip title=\"Attech File\" arrow>\r\n                                <Button\r\n                                    component=\"label\"\r\n                                    sx={{ borderRadius: 5 }}\r\n                                >\r\n                                    <GrAttachment size=\"20px\" color=\"white\" />\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        accept=\".zip,.txt,.psd,.pptx,.pptx,.png,.jpeg,.jpg,.pdf,.docx,.doc\"\r\n                                        hidden\r\n                                    />\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    </form>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={formik.handleSubmit} color=\"success\" variant=\"contained\">{actionTitle}</Button>\r\n                    <Button onClick={closeDialog} color=\"success\" variant=\"outlined\">cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Assignment\r\n","import React, { useState } from 'react'\r\nimport { Box, Typography, Avatar, Button, Accordion, AccordionDetails, Tooltip, Menu, MenuItem, AccordionSummary } from \"@mui/material\"\r\nimport { MdAssignment } from \"react-icons/md\"\r\nimport { AiOutlineExclamationCircle } from \"react-icons/ai\"\r\nimport { MdOutlineMoreVert, MdUpload } from \"react-icons/md\"\r\nimport Assignment from './Assignment'\r\n\r\n\r\nconst AssignmentAccordion = ({ curUser, isTeacher, assignment, setCurrentAssignmentID, setChecked }) => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handleClick = (event) => {\r\n        event.stopPropagation();\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = (event) => {\r\n        // event.stopPropagation();\r\n        setAnchorEl(null);\r\n    };\r\n    const previewAssignment = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    const submittedAssignments = (event) => {\r\n        event.stopPropagation();\r\n        setCurrentAssignmentID(assignment?._id)\r\n        setChecked(false)\r\n        handleClose()\r\n    }\r\n    const Checked = (event) => {\r\n        event.stopPropagation();\r\n        setCurrentAssignmentID(assignment?._id)\r\n        setChecked(true)\r\n        handleClose()\r\n    }\r\n    return (\r\n        <div>\r\n            <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')} sx={{ marginTop: 1, \"&:hover\": { boxShadow: 3, cursor: \"pointer\" } }}  >\r\n                <AccordionSummary\r\n                    // expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >\r\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                        <Box minWidth=\"65px\" >\r\n                            <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}><MdAssignment size=\"20px\" color=\"white\" /></Avatar>\r\n                        </Box>\r\n                        <Box>\r\n                            <Typography sx={{ fontSize: \"16px\", }}>{assignment?.title}</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                        {\r\n                            assignment?.file ? <Tooltip arrow title={\"View file\"}>\r\n                                <Button\r\n                                    sx={{ color: \"black\", borderRadius: 5 }}\r\n                                    size=\"small\"\r\n                                    onClick={(e) => previewAssignment(e)}\r\n                                    target=\"_blanck\"\r\n                                    href={assignment?.file}\r\n                                >\r\n                                    <AiOutlineExclamationCircle size=\"23px\" style={{ margin: \"auto 0px\" }} />\r\n                                </Button>\r\n                            </Tooltip>\r\n                                : \"\"\r\n                        }\r\n                        {isTeacher ? (\r\n                            <Box>\r\n                                <Button\r\n                                    sx={{ color: \"green\", borderRadius: 5 }}\r\n                                    size=\"small\"\r\n                                    id=\"basic-button\"\r\n                                    aria-controls=\"basic-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    aria-expanded={open ? 'true' : undefined}\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    <MdOutlineMoreVert size=\"23px\" style={{ margin: \"auto 0px\" }} />\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"basic-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    MenuListProps={{\r\n                                        'aria-labelledby': 'basic-button',\r\n                                    }}\r\n                                >\r\n\r\n                                    {/* <MenuItem onClick={() => history.push(`submitted/${assignment?._id}`)}>Submited</MenuItem> */}\r\n                                    {/* <MenuItem href={`submitted/${assignment?._id}`}>Submited</MenuItem> */}\r\n                                    <MenuItem onClick={submittedAssignments}>Submited</MenuItem>\r\n                                    <MenuItem onClick={Checked}>Checked</MenuItem>\r\n                                </Menu>\r\n                            </Box>\r\n                        ) : (<Assignment\r\n                            btnIcon={<MdUpload size=\"23px\" style={{ margin: \"auto 0px\" }} />}\r\n                            btnVariant=\"text\"\r\n                            btnColor=\"success\"\r\n                            tooltipTitle=\"Submit Assignment\"\r\n                            input2label=\"Answers\"\r\n                            currentAssignment={assignment}\r\n                            dialogTitle=\"Submit Assignment\"\r\n                            actionTitle=\"submit\"\r\n                            curUser={curUser}\r\n                            isTeacher={isTeacher}\r\n                        />\r\n                        )}\r\n                    </Box>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                    <Typography> {assignment?.description ? assignment.description : \"This Assignment have no desccription\"}</Typography>\r\n                </AccordionDetails>\r\n\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignmentAccordion\r\n","import React from 'react'\r\nimport { Box, Avatar, Typography } from \"@mui/material\"\r\nconst StudentForThreeComp = ({ submitted }) => {\r\n\r\n    return (\r\n        <Box width=\"100%\" mx={1} mb={1} sx={{ backgroundColor: \"#fff\", boxShadow: 2, \"&:hover\": { cursor: \"pointer\", boxShadow: 4, backgroundColor: \"#0080000c\" }, borderRadius: \"12px\", padding: \"1rem 0px 1rem 1.5rem\" }}>\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Box width=\"65px\" >\r\n                    <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{submitted?.name[0]}</Avatar>\r\n                </Box>\r\n                <Box flexGrow={1}>\r\n                    <Typography variant=\"h6\" color=\"#0000009c\" sx={{ color: \"green\", cursor: \"pointer\" }}>{submitted?.name}</Typography>\r\n                </Box>\r\n\r\n                <Typography mr={2} variant=\"body1\">{Math.round(submitted?.marks)} Marks</Typography>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StudentForThreeComp\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Box, Avatar, Accordion,\r\n    AccordionSummary, AccordionDetails,\r\n    Typography, Tooltip, Button,\r\n\r\n} from \"@mui/material\"\r\n\r\nimport { AiOutlineExclamationCircle } from \"react-icons/ai\"\r\nimport { ImListNumbered } from \"react-icons/im\"\r\nimport SendingMessageInputComp from './SendingMessageInputComp'\r\nimport { useSelector } from 'react-redux'\r\nimport appSetting from '../appSetting/appSetting'\r\nimport axios from 'axios'\r\nimport { socket } from '../App'\r\n\r\nconst SubmittedAccordion = ({ submitted, assignmentID, checked, setOpenSnack, setSeverity }) => {\r\n\r\n    const curUser = useSelector((state) => state.usersReducer.curUser);\r\n    const [showInput, setShowInput] = useState(false)\r\n    const [hideAccordion, setHideAccordion] = useState(false)\r\n    const [marks, setMarks] = useState(Number(0))\r\n    const [expanded, setExpanded] = useState(false);\r\n    console.log(\"checkedInSubmittedAccordion\", checked)\r\n    const toggle = (event) => {\r\n        event.stopPropagation()\r\n        if (showInput) {\r\n            setShowInput(false)\r\n        } else {\r\n            setShowInput(true)\r\n        }\r\n    }\r\n    const giveNumbersFunc = async (e) => {\r\n        if (marks && marks >= 0 && marks <= 100) {\r\n            try {\r\n                const res = await axios.post(`${appSetting.severHostedUrl}/assignment/givemarks`, { studentID: submitted?.id, assignmentID, marks })\r\n                if (res) {\r\n                    socket.emit(\"changeInAssignment\", res.data.assignment)\r\n                    setHideAccordion(true)\r\n                    if (res.data.message) {\r\n                        setOpenSnack(res.data.message)\r\n                        setSeverity(\"success\")\r\n                    } else {\r\n                        setOpenSnack(res.data.error)\r\n                        setSeverity(\"error\")\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } else {\r\n            setOpenSnack(\"Failed to Giving Marks...\")\r\n            setSeverity(\"error\")\r\n        }\r\n    }\r\n    const previewAssignment = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return (\r\n        <Box>\r\n            {hideAccordion ? \"\" :\r\n                <Box>\r\n                    <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')} sx={{ backgroundColor: \"#00800012\", borderRadius: 1, marginTop: 1, \"&:hover\": { boxShadow: 3, cursor: \"pointer\" } }}  >\r\n                        {/* <Tooltip title=\"Click here to Read Answers\"> */}\r\n                        <AccordionSummary\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <Box minWidth=\"65px\" >\r\n                                    <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{submitted?.name[0]}</Avatar>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Typography sx={{ fontSize: \"16px\", }}>{submitted?.name}</Typography>\r\n                                </Box>\r\n                            </Box>\r\n                            <Box display=\"flex\" alignItems=\"center\">\r\n                                {\r\n                                    submitted?.file ? <Tooltip arrow title={\"View file\"}>\r\n                                        <Button\r\n                                            sx={{ color: \"black\", borderRadius: 5 }}\r\n                                            size=\"small\"\r\n                                            onClick={(e) => previewAssignment(e)}\r\n                                            target=\"_blanck\"\r\n                                            href={submitted?.file}\r\n                                        >\r\n                                            <AiOutlineExclamationCircle size=\"23px\" style={{ margin: \"auto 0px\" }} />\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                        : \"\"\r\n                                }\r\n                                <Box>\r\n                                    <Tooltip title=\"Give Marks\">\r\n                                        <Button\r\n                                            sx={{ color: \"green\", borderRadius: 5 }}\r\n                                            size=\"small\"\r\n                                            id=\"basic-button\"\r\n                                            onClick={toggle}\r\n                                        >\r\n                                            <ImListNumbered size=\"23px\" style={{ margin: \"auto 0px\" }} />\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                </Box>\r\n\r\n                            </Box>\r\n                        </AccordionSummary>\r\n                        {/* </Tooltip> */}\r\n\r\n                        <AccordionDetails>\r\n                            <Typography>{submitted?.desc}</Typography>\r\n                        </AccordionDetails>\r\n\r\n                    </Accordion>\r\n                    <Box mx={1} onClick={(e) => { e.stopPropagation() }}>\r\n                        {showInput ? <SendingMessageInputComp\r\n                            name=\"marks\"\r\n                            autoFocus={true}\r\n                            value={marks}\r\n                            setValue={setMarks}\r\n                            type=\"number\"\r\n                            placeholder=\"Give Marks Out of 100\"\r\n                            color=\"success\"\r\n                            submitFunc={giveNumbersFunc}\r\n                            userName={curUser?.fname[0]}\r\n                        /> : \"\"\r\n                        }\r\n                    </Box>\r\n                </Box>\r\n            }\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default SubmittedAccordion\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Tooltip, Button, Typography } from \"@mui/material\"\r\nimport { BiArrowBack } from \"react-icons/bi\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport StudentForThreeComp from './StudentForThreeComp'\r\nimport SubmittedAccordion from './SubmittedAccordion'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { currentAssignmentRedux } from '../redux/actions'\r\nimport { socket } from '../App'\r\nimport appSetting from '../appSetting/appSetting'\r\nimport MuiSnacks from './MuiSnacks'\r\n\r\nconst SubmittedAndChecked = ({ currentAssignmentID, checked }) => {\r\n    const currentAssignment = useSelector(state => state.usersReducer.currentAssignment)\r\n    const [assignment, setAssignment] = useState(currentAssignment)\r\n\r\n    const [openSnack, setOpenSnack] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        socket.on(\"CHANGE_IN_ASSIGNMENT\", (assignment) => {\r\n            if (currentAssignment?._id === assignment._id) {\r\n                setAssignment(assignment)\r\n                dispatch(currentAssignmentRedux(assignment))\r\n            }\r\n        })\r\n    })\r\n\r\n    useEffect(async () => {\r\n        const res = await axios.get(`${appSetting.severHostedUrl}/assignment/submitted/${currentAssignmentID}`)\r\n        if (res) {\r\n            dispatch(currentAssignmentRedux(res.data.assignment))\r\n            setAssignment(res.data.assignment)\r\n        } else {\r\n        }\r\n    }, [])\r\n    return (\r\n        <Box>\r\n            {openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" px={2} width=\"100%\" >\r\n                <Tooltip title=\"Go to checked Assignments\" arrow>\r\n                    <Button onClick={() => history.push(\"/coursedetails\")} startIcon={<BiArrowBack color=\"inherit\" size=\"22px\" />} color=\"success\" sx={{ marginTop: 3, borderRadius: 5 }} variant=\"contained\">\r\n                        Back\r\n                    </Button>\r\n                </Tooltip>\r\n            </Box>\r\n            <Box display=\"flex\" borderBottom=\"1px solid #00800085\" justifyContent=\"space-between\" pb={1} px={2} width=\"100%\" >\r\n                <Typography variant=\"h4\" color=\"green\">\r\n                    {checked ? \"Checked \" : \"Submitted \"} Students\r\n                </Typography>\r\n                <Typography variant=\"body1\" mt={2} color=\"green\">\r\n                    ({assignment?.title})\r\n                </Typography>\r\n            </Box>\r\n            {\r\n                checked ? assignment?.submitted?.map((student, ind) => {\r\n                    return (\r\n                        student.marks ?\r\n                            <StudentForThreeComp\r\n                                key={ind}\r\n                                submitted={student}\r\n                            /> : \"\"\r\n                    )\r\n                }) :\r\n                    assignment?.submitted?.length > 0 ?\r\n                        assignment?.submitted?.map((student, ind) => {\r\n                            return (\r\n                                student.marks ?\r\n                                    \"\" :\r\n                                    <SubmittedAccordion\r\n                                        checked={checked}\r\n                                        key={ind}\r\n                                        submitted={student}\r\n                                        assignmentID={assignment?._id}\r\n                                        setOpenSnack={setOpenSnack}\r\n                                        setSeverity={setSeverity}\r\n                                    />\r\n                            )\r\n                        }) : <Box pt={9} borderTop=\"1px solid green\" width=\"100%\"\r\n                            textAlign=\"center\"\r\n                        >\r\n                            <Typography variant=\"h6\" color=\"green\">\r\n                                Currently No Student Submit this Assignment\r\n                            </Typography>\r\n                        </Box>\r\n            }\r\n\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport default SubmittedAndChecked\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Tooltip, Button, Typography, Avatar } from '@mui/material'\r\nimport { BiArrowBack } from \"react-icons/bi\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { checkedAssignmentsRedux } from '../redux/actions'\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\n\r\nconst CheckedAssignments = ({ currentCourseID }) => {\r\n\r\n    const curUser = useSelector((state) => state.usersReducer.curUser);\r\n\r\n    const [checkedAssignments, setCheckedAssignments] = useState(null)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    // socket.on\r\n    // })\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.post(`${appSetting.severHostedUrl}/assignment/studentallchecked`, { courseID: currentCourseID, studentID: curUser?._id })\r\n            if (res) {\r\n                setCheckedAssignments(res.data.checked)\r\n                dispatch(checkedAssignmentsRedux(res.data.checked))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Box>\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-end\" px={2} width=\"100%\" >\r\n                    <Tooltip title=\"Back to Course Details\" arrow>\r\n                        <Button onClick={() => history.push(`/coursedetails`)} startIcon={<BiArrowBack color=\"inherit\" size=\"22px\" />} color=\"success\" sx={{ marginTop: 3, borderRadius: 5 }} variant=\"contained\">\r\n                            Back\r\n                        </Button>\r\n                    </Tooltip>\r\n                </Box>\r\n                <Box display=\"flex\" borderBottom=\"1px solid #00800085\" justifyContent=\"space-between\" pb={1} px={2} width=\"100%\" >\r\n                    <Typography variant=\"h4\" color=\"green\">\r\n                        All Checked Assignments\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" mt={2} color=\"green\">\r\n                        (Assignment Name)\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n            {checkedAssignments?.length > 0 ?\r\n                checkedAssignments?.map((assignment, index) => {\r\n                    const findStudent = assignment.submitted.find(student => student.id === curUser._id)\r\n                    const getMarks = findStudent?.marks\r\n                    return (\r\n                        <Box key={index} width=\"100%\" mx={1} mb={1} sx={{ backgroundColor: \"#fff\", boxShadow: 2, \"&:hover\": { cursor: \"pointer\", boxShadow: 4, backgroundColor: \"#0080000c\" }, borderRadius: \"12px\", padding: \"1rem 0px 1rem 1.5rem\" }}>\r\n                            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <Box width=\"65px\" >\r\n                                    <Avatar sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{assignment?.title[0]}</Avatar>\r\n                                </Box>\r\n                                <Box flexGrow={1}>\r\n                                    <Typography variant=\"h6\" color=\"#0000009c\" sx={{ color: \"green\", cursor: \"pointer\" }}>{assignment?.title}</Typography>\r\n                                </Box>\r\n\r\n                                <Typography mr={2} variant=\"body1\">{getMarks} Marks</Typography>\r\n\r\n                            </Box>\r\n                        </Box>\r\n                    )\r\n                }) : <Box pt={9} borderTop=\"1px solid green\" width=\"100%\"\r\n                    textAlign=\"center\"\r\n                >\r\n                    <Typography variant=\"h6\" color=\"green\">\r\n                        No Assignment Checked\r\n                    </Typography>\r\n                </Box>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckedAssignments\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, Button, Tooltip } from \"@mui/material\";\r\nimport AssignmentAccordion from './AssignmentAccordion';\r\nimport Assignment from './Assignment';\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport axios from 'axios';\r\nimport SubmittedAndChecked from './SubmittedAndChecked'\r\nimport CheckedAssignments from './CheckedAssignments'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { settingAssignments } from '../redux/actions';\r\nimport MuiSnacks from './MuiSnacks';\r\nimport appSetting from '../appSetting/appSetting'\r\n\r\n\r\nconst AssignmentComp = ({ curUser, isTeacher, currentCourse }) => {\r\n    const assignments = useSelector(state => state.usersReducer.allAssignments)\r\n\r\n    const [allAssignments, setAllAssignments] = useState(assignments)\r\n    const [currentAssignmentID, setCurrentAssignmentID] = useState(\"\");\r\n    const [currentCourseID, setCurrentCourseID] = useState(\"\");\r\n    const [checked, setChecked] = useState(null);\r\n\r\n    const [openSnack, setOpenSnack] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.post(`${appSetting.severHostedUrl}/assignment/allassignments`, { courseID: currentCourse?._id })\r\n            if (res) {\r\n                dispatch(settingAssignments(res.data.allAssignments))\r\n                setAllAssignments(res.data.allAssignments)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [allAssignments])\r\n    return (\r\n        <Box sx={{ maxWidth: \"760px\", margin: \"0 auto\" }}>\r\n            {openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n            {currentAssignmentID && isTeacher ? <SubmittedAndChecked checked={checked} currentAssignmentID={currentAssignmentID} />\r\n                : !isTeacher && currentCourseID ? <CheckedAssignments currentCourseID={currentCourseID} />\r\n                    : <Box>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" px={2} width=\"100%\" >\r\n                            {isTeacher ? (\r\n                                <Assignment\r\n                                    btnTitle=\"create\"\r\n                                    btnVariant=\"contained\"\r\n                                    btnColor=\"success\"\r\n                                    input2label=\"Questions and Instructions\"\r\n                                    tooltipTitle=\"Create Assignment\"\r\n                                    btnStartIcon={<MdAdd size=\"20px\" color=\"white\" />}\r\n                                    dialogTitle=\"Create Assignment or Questions\"\r\n                                    actionTitle=\"create\"\r\n                                    currentCourse={currentCourse}\r\n                                    isTeacher={isTeacher}\r\n                                    setOpenSnack={setOpenSnack}\r\n                                    setSeverity={setSeverity}\r\n                                    setAllAssignments={setAllAssignments}\r\n                                />\r\n                            ) : <Tooltip title=\"Go to checked Assignments\" arrow>\r\n                                <Button onClick={() => setCurrentCourseID(currentCourse?._id)} color=\"success\" sx={{ marginTop: 3, borderRadius: 5 }} variant=\"contained\">\r\n                                    Checked\r\n                                </Button>\r\n\r\n                            </Tooltip>\r\n                            }\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"flex-start\" pb={1} px={2} width=\"100%\" >\r\n                            <Typography variant=\"h4\" color=\"green\">\r\n                                {isTeacher ? \"\" : \"Non Submitted \"}Assignments\r\n                            </Typography>\r\n                        </Box>\r\n                        {\r\n                            allAssignments?.length > 0 ?\r\n                                allAssignments?.map((assignment, index) => {\r\n                                    const check = assignment?.submitted.find(student => student.id === curUser._id)\r\n                                    if (!check) {\r\n                                        return (\r\n                                            <AssignmentAccordion\r\n                                                key={index}\r\n                                                curUser={curUser}\r\n                                                isTeacher={isTeacher}\r\n                                                assignment={assignment}\r\n                                                setCurrentAssignmentID={setCurrentAssignmentID}\r\n                                                setChecked={setChecked}\r\n                                            />\r\n                                        )\r\n                                    }\r\n                                }) : <Box pt={9} borderTop=\"1px solid green\" width=\"100%\"\r\n                                    textAlign=\"center\"\r\n                                >\r\n                                    <Typography variant=\"h6\" color=\"green\">\r\n                                        Currently No Assignments\r\n                                    </Typography>\r\n                                </Box>\r\n                        }\r\n                    </Box>\r\n            }\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default AssignmentComp\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, } from \"@mui/material\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport Header from \"./Header\";\r\nimport TabsComp from './TabsComp';\r\nimport Stream from './Stream';\r\nimport Announcement from './Announcement';\r\nimport CourseStudentsComp from './CourseStudentsComp';\r\nimport AssignmentComp from './AssignmentComp';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Spinner from './Spinner';\r\nimport appSetting from '../appSetting/appSetting'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { currentCourseFunc } from '../redux/actions';\r\nimport { socket } from '../App';\r\nimport MuiSnacks from './MuiSnacks';\r\n\r\nconst useStyles = makeStyles({\r\n\tclass_materials: {\r\n\t\twidth: \"100vw\",\r\n\t\theight: \"100vh\"\r\n\t}\r\n})\r\n\r\n\r\nconst ClassMaterials = ({ curUser, setAuth }) => {\r\n\tconst currentCourse = useSelector((state) => state.usersReducer.currentCourse);\r\n\t// const [currentCourse, setCurrentCourse] = useState(currCourse)\r\n\tconst [openSnack, setOpenSnack] = useState(\"\");\r\n\tconst [severity, setSeverity] = useState(\"\");\r\n\tconst [showClass, setShowClass] = useState(null);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\r\n\tconst enrolledStudent = currentCourse?.students?.find(student => student.id === curUser?._id);\r\n\r\n\tconst classes = useStyles()\r\n\tconst params = useParams()\r\n\r\n\tconst history = useHistory()\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(async () => {\r\n\r\n\t\tconst res = await axios.post(`${appSetting.severHostedUrl}/course/specific`, { id: params.id })\r\n\t\tif (res.data.currentCourse) {\r\n\t\t\tdispatch(currentCourseFunc(res.data.currentCourse))\r\n\t\t\t// setCurrentCourse(res.data.currentCourse)\r\n\t\t\tsetShowClass(true)\r\n\t\t\tsetSpinner(false)\r\n\t\t} else {\r\n\t\t\tconsole.log(res.data.error)\r\n\t\t\tsetShowClass(false)\r\n\t\t\tsetSpinner(false)\r\n\t\t}\r\n\t}, [])\r\n\tuseEffect(() => {\r\n\r\n\t\tsocket.on(\"CHANGE_IN_COURSE\", (course) => {\r\n\t\t\tif (currentCourse?._id === course._id) {\r\n\t\t\t\tdispatch(currentCourseFunc(course))\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\tif (spinner) { return <Spinner /> }\r\n\treturn (\r\n\t\t<Box className={classes.class_materials}>\r\n\t\t\t<Header curUser={curUser} setAuth={setAuth} />\r\n\t\t\t{showClass ?\r\n\t\t\t\tcurUser?.roll === \"student\" && enrolledStudent ||\r\n\t\t\t\t\tcurUser?.roll === \"teacher\" && currentCourse?.teacher_id === curUser?._id ?\r\n\t\t\t\t\t(<Box>\r\n\t\t\t\t\t\t{openSnack ? <MuiSnacks openSnack={openSnack} severity={severity} text={openSnack} setOpenSnack={setOpenSnack} /> : \"\"}\r\n\t\t\t\t\t\t<TabsComp\r\n\t\t\t\t\t\t\ttab1Label=\"Stream\"\r\n\t\t\t\t\t\t\tpanel1={<Stream currentCourse={currentCourse} curUser={curUser} />}\r\n\r\n\t\t\t\t\t\t\ttab2Label={curUser?.roll === \"teacher\" ? \"Class Work\" : \"Assignments\"}\r\n\t\t\t\t\t\t\tpanel2={<AssignmentComp isTeacher={curUser?.roll === \"teacher\" ? true : false} currentCourse={currentCourse} curUser={curUser} />}\r\n\r\n\t\t\t\t\t\t\ttab3Label={curUser?.roll === \"teacher\" ? \"Students\" : \"Announcement\"}\r\n\t\t\t\t\t\t\tpanel3={curUser?.roll === \"teacher\" ? <CourseStudentsComp currentCourse={currentCourse} curUser={curUser} /> : < Announcement currentCourse={currentCourse} curUser={curUser} />}\r\n\r\n\t\t\t\t\t\t\ttab4Label={curUser?.roll === \"teacher\" ? \"Announcement\" : \"\"}\r\n\t\t\t\t\t\t\tpanel4={curUser?.roll === \"teacher\" ? <Announcement currentCourse={currentCourse} curUser={curUser} /> : \"\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Box>)\r\n\t\t\t\t\t: history.push('/coursedetails')\r\n\t\t\t\t: history.push('/coursedetails')\r\n\t\t\t}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default ClassMaterials","import React, { useEffect, useState } from 'react'\r\nimport { Box, Button, Typography } from '@mui/material'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst PrivateConversation = ({ id }) => {\r\n    // const con= useSelector(state=>state.usersReducer.)\r\n    const [currentConversation, setCurrentConversation] = useState(null)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        // const findConversation = \r\n    }, [])\r\n    return (\r\n        <Box mx=\"auto\" px={2} maxHeight=\"85vh\" sx={{ overflowY: \"auto\" }} maxWidth=\"900px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Box mt={5} display=\"flex\" justifyContent=\"flex-end\" pb={1} px={2} width=\"100%\" >\r\n                <Button variant=\"contained\" onClick={() => history.push(\"/messages\")} size=\"small\" color=\"success\" sx={{ borderRadius: 5 }}>\r\n                    Back\r\n                </Button>\r\n            </Box>\r\n            <Box mt={5} display=\"flex\" borderBottom=\"1px solid #00800085\" justifyContent=\"flex-start\" pb={1} px={2} width=\"100%\" >\r\n                <Typography variant=\"h5\" color=\"green\">\r\n                    With Teacher !1\r\n                </Typography>\r\n            </Box>\r\n            <Box width=\"100%\">\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PrivateConversation\r\n","import React, { useEffect, useState } from 'react'\r\nimport Header from './Header'\r\nimport { Avatar, Box, Typography } from \"@mui/material\"\r\nimport SendingMessageInputComp from './SendingMessageInputComp'\r\nimport MessageBox from './MessageBox'\r\nimport PrivateConversation from './PrivateConversation.js'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { socket } from '../App'\r\nimport { useHistory } from 'react-router-dom'\r\nimport appSetting from '../appSetting/appSetting'\r\n// import PrivateConversation from './PrivateConversation'\r\n\r\nconst MessagesComp = ({ curUser, setAuth }) => {\r\n    const [allConversationsArray, setAllConversationsArray] = useState()\r\n    const [conversationID, setConversationID] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [recieverID, setRecieverID] = useState(\"\")\r\n    const [recieverName, setRecieverName] = useState(\"\")\r\n    const history = useHistory()\r\n    const setIDfun = (id, name) => {\r\n        if (recieverID) {\r\n            setRecieverID(\"\")\r\n            setRecieverName(\"\")\r\n        } else {\r\n            setRecieverID(id)\r\n            setRecieverName(name)\r\n        }\r\n    }\r\n    const { _id, fname, lname } = curUser || {}\r\n    const sendMsgFunc = async () => {\r\n        try {\r\n            const newMessage = message.trim()\r\n\r\n            if (newMessage) {\r\n                const name = `${fname} ${lname}`\r\n                let time = moment().format('hh:mm:ss A')\r\n                const messageObj = {\r\n                    senderID: _id, name, time, message: newMessage, recieverID\r\n                }\r\n                await axios.post(`${appSetting.severHostedUrl}/user/sendmsg`, messageObj)\r\n                setMessage(\"\")\r\n                setRecieverID(\"\")\r\n            } else {\r\n                alert(\"write something\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    // useEffect(() => {\r\n    // socket.on()\r\n    // })\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`${appSetting.severHostedUrl}/user/myallconversations/${curUser?._id}`)\r\n            if (res) {\r\n                setAllConversationsArray(res.data.allConversations)\r\n\r\n                // dispatch(allConversationsFunc(res.data.allConversations))\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }, [])\r\n    return (\r\n        <Box className={`msgs`}>\r\n            <Header curUser={curUser} setAuth={setAuth} />\r\n            {\r\n                conversationID ?\r\n                    <PrivateConversation id={conversationID} /> :\r\n                    <Box mx=\"auto\" px={2} maxHeight=\"85vh\" sx={{ overflowY: \"auto\" }} maxWidth=\"900px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box mt={5} display=\"flex\" borderBottom=\"1px solid #00800085\" justifyContent=\"flex-start\" pb={1} px={2} width=\"100%\" >\r\n                            <Typography variant=\"h5\" color=\"green\">\r\n                                All Conversation\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box width=\"100%\">\r\n                            {\r\n                                allConversationsArray?.length > 0 ?\r\n                                    allConversationsArray.map((conversation, ind) => {\r\n                                        const isUser1 = curUser?._id === conversation.user1ID\r\n                                        return (\r\n                                            <Box onClick={() => setConversationID(conversation._id)} mt={2} key={ind} width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                                                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                                                    <Box minWidth=\"65px\" >\r\n                                                        <Avatar sizes=\"50px\" sx={{ bgcolor: \"green\", textTransform: \"capitalize\" }}>{isUser1 ? conversation.user2Name[0] : conversation.user1Name[0]}</Avatar>\r\n                                                    </Box>\r\n                                                    <Box>\r\n                                                        <Typography sx={{ fontSize: \"16px\", textTransform: \"capitalize\" }}>{isUser1 ? conversation.user2Name : conversation.user1Name}</Typography>\r\n                                                    </Box>\r\n                                                </Box>\r\n                                                <Box mt={1}>\r\n                                                    <Typography sx={{ fontSize: '12px' }} color=\"green\">\r\n                                                        {conversation.chat.length} Messages\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            </Box>\r\n                                        )\r\n                                    })\r\n                                    : <Box pt={9} borderTop=\"1px solid green\" width=\"100%\"\r\n                                        textAlign=\"center\"\r\n                                    >\r\n                                        <Typography variant=\"h6\" color=\"green\">\r\n                                            Currently You Have No Conversation\r\n                                        </Typography>\r\n                                    </Box>\r\n                            }\r\n                        </Box>\r\n                    </Box>\r\n            }\r\n\r\n\r\n            {/* {curUser?.messages?.length > 0 ?\r\n                    curUser?.messages.map((msg, index) => {\r\n                        return (\r\n                            <Box width=\"100%\" key={index} onClick={() => setIDfun(msg.senderID, msg.name)}>\r\n                                <MessageBox\r\n                                    color={curUser?._id === msg?.id ? \"#ba000d\" : \"green\"}\r\n                                    timeColor={curUser?._id === msg?.id ? \"#ba000db8\" : \"#2e7d32de\"}\r\n                                    curUser={curUser}\r\n                                    nameFirestLetter={msg.name[0]}\r\n                                    name={curUser?._id === msg?.id ? \"Me\" : msg.name}\r\n                                    time={msg.time}\r\n                                    message={msg.message}\r\n                                />\r\n                            </Box>\r\n                        )\r\n                    }) : <Box pt={9} borderTop=\"1px solid green\" width=\"100%\"\r\n                        textAlign=\"center\"\r\n                    >\r\n                        <Typography variant=\"h6\" color=\"green\">\r\n                            Currently You Have No Messages\r\n                        </Typography>\r\n                    </Box>\r\n                }\r\n                {\r\n                    recieverID ? <SendingMessageInputComp\r\n                        name=\"message\"\r\n                        autoFocus={true}\r\n                        value={message}\r\n                        setValue={setMessage}\r\n                        type=\"text\"\r\n                        placeholder={`Write Message for ${recieverName}`}\r\n                        color=\"success\"\r\n                        submitFunc={sendMsgFunc}\r\n                        userName={curUser?.fname[0]}\r\n                    /> : \"\"\r\n                } */}\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MessagesComp\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children, auth, SuccessComp, FailComp, ...rest }) => {\r\n    return <Route {...rest} render={() => (auth ? SuccessComp : FailComp)} />;\r\n};\r\n\r\nexport default PrivateRoute;","import socketIO from 'socket.io-client';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Spinner from \"./components/Spinner\";\r\nimport Login from \"./components/Login\";\r\nimport Profile from \"./components/Profile\";\r\nimport Attendance from \"./components/Attendance\";\r\nimport CourseDetails from \"./components/CourseDetails\";\r\nimport ClassMaterials from \"./components/ClassMaterials\";\r\nimport MessagesComp from \"./components/MessagesComp\";\r\nimport appSetting from \"./appSetting/appSetting\"\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport {\r\n\tcurUserFun,/* getUsers,*/ getCourseFunc, getStudentCourseFunc, updateCourses,\r\n\tupdateCurrentCourse, updateAllAssignments, editAvailAbleCourses\r\n} from \"./redux/actions/index\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst ENDPOINT = appSetting.severHostedUrl\r\nexport const socket = socketIO(ENDPOINT, { transports: [\"websocket\"] })\r\nconst App = () => {\r\n\tconst [auth, setAuth] = useState(null)\r\n\tconst _id = localStorage.getItem(\"uid\");\r\n\r\n\tconst curUser = useSelector((state) => state.usersReducer.curUser);\r\n\tconst [uid, setUid] = useState(_id || curUser._id);\r\n\tconst [spinner, setSpinner] = useState(true);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!auth && !uid) {\r\n\t\t\tsetSpinner(false)\r\n\t\t}\r\n\t\tif (uid || auth) {\r\n\t\t\tsetSpinner(true)\r\n\t\t\tsetAuth(true)\r\n\t\t\tvar currentUser;\r\n\t\t\taxios\r\n\t\t\t\t.get(`${appSetting.severHostedUrl}/user/getdata`)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconst data = response.data;\r\n\t\t\t\t\t// console.log(\"data\", response)\r\n\t\t\t\t\tcurrentUser = data.find((user) => user._id === _id);\r\n\t\t\t\t\tif (!currentUser) {\r\n\t\t\t\t\t\tsetSpinner(false);\r\n\t\t\t\t\t\tsetUid(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdispatch(curUserFun(currentUser));\r\n\t\t\t\t\t\tif (currentUser.roll === \"teacher\") {\r\n\t\t\t\t\t\t\taxios.post(`${appSetting.severHostedUrl}/course/mycourse`, { teacher_id: currentUser._id })\r\n\t\t\t\t\t\t\t\t.then((resp) => {\r\n\t\t\t\t\t\t\t\t\tconst course = resp.data.course;\r\n\t\t\t\t\t\t\t\t\tdispatch(getCourseFunc(course))\r\n\t\t\t\t\t\t\t\t}).catch(err => console.log(err))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (currentUser.roll === \"student\" && currentUser.atClass) {\r\n\t\t\t\t\t\t\taxios.post(`${appSetting.severHostedUrl}/course/forstudent`, { studentClass: currentUser.atClass, studentID: _id })\r\n\t\t\t\t\t\t\t\t.then((resp) => {\r\n\t\t\t\t\t\t\t\t\tconst courses = resp.data.courses;\r\n\t\t\t\t\t\t\t\t\tdispatch(getStudentCourseFunc(courses))\r\n\t\t\t\t\t\t\t\t}).catch(err => console.log(err))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetUid(true);\r\n\t\t\t\t\t\tsetSpinner(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// dispatch(getUsers(data));\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(error));\r\n\t\t\tsocket.on(\"connect\", () => {\r\n\t\t\t\t// console.log(\"Backend Connected..!!\")\r\n\t\t\t})\r\n\t\t\tsocket.on(\"courseADDEDByTeacher\", (newCourse) => {\r\n\t\t\t\tif (currentUser?.roll === \"student\" && currentUser?.atClass == newCourse?.teacherClass) {\r\n\t\t\t\t\tdispatch(editAvailAbleCourses(newCourse))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t// socket.on(\"ENROLLEDiNcOURSE\", (course) => {\r\n\t\t\t// \tif (currentUser?._id === course.teacher_id) {\r\n\t\t\t// \t\tconsole.log(\"enrolled\")\r\n\t\t\t// \t\tdispatch(getCourseFunc(course))\r\n\t\t\t// \t} else { console.log(\"not Enrolled\") }\r\n\t\t\t// \tconsole.log(\"course\", course)\r\n\t\t\t// })\r\n\t\t\tsocket.on(\"courseEditedByTeacher\", (course) => {\r\n\t\t\t\tif (currentUser?.roll === \"student\" && currentUser?.atClass == course?.teacherClass) {\r\n\t\t\t\t\tdispatch(updateCourses(course))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tsocket.on(\"messageAddedStream\", (course) => {\r\n\t\t\t\tdispatch(updateCurrentCourse(course))\r\n\t\t\t})\r\n\t\t\tsocket.on(\"ASSIGNMENT_ADDED\", (allAssignment) => {\r\n\t\t\t\tdispatch(updateAllAssignments(allAssignment))\r\n\t\t\t})\r\n\t\t}\r\n\t}, [auth, ENDPOINT]);\r\n\r\n\tif (spinner) return <Spinner />;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/\"\r\n\t\t\t\t\t\tSuccessComp={<Redirect to=\"/profile\" curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Login setAuth={setAuth} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/profile\"\r\n\t\t\t\t\t\tSuccessComp={<Profile curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/attendance\"\r\n\t\t\t\t\t\tSuccessComp={<Attendance curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/coursedetails\"\r\n\t\t\t\t\t\tSuccessComp={<CourseDetails curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/messages\"\r\n\t\t\t\t\t\tSuccessComp={<MessagesComp curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/messages/:id\"\r\n\t\t\t\t\t\tSuccessComp={<PrivateConversation curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/classmaterials\"\r\n\t\t\t\t\t\tSuccessComp={<Redirect to=\"/profile\" curUser={curUser} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* <PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/logout\"\r\n\t\t\t\t\t\tSuccessComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/:id\"\r\n\t\t\t\t\t\tSuccessComp={<ClassMaterials curUser={curUser} setAuth={setAuth} />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\tauth={auth}\r\n\t\t\t\t\t\tpath=\"/*\"\r\n\t\t\t\t\t\tSuccessComp={<Redirect to=\"/profile\" />}\r\n\t\t\t\t\t\tFailComp={<Redirect to=\"/\" />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  users: [],\r\n  curUser: {},\r\n  course: {},\r\n  studentCourse: [],\r\n  currentCourse: null,\r\n  currentAssignment: null,\r\n  allAssignments: null,\r\n  checkedAssignments: null\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_USERS\":\r\n      return { ...state, users: action.payload };\r\n    case \"CUR_USER\":\r\n      return { ...state, curUser: action.payload };\r\n    case \"GET_COURSE\":\r\n      return { ...state, course: action.payload };\r\n    case \"GET_Student_COURSES\":\r\n      return { ...state, studentCourse: action.payload };\r\n    case \"EDIT_AVAILABLE_COURSES\":\r\n      let findAlready = state.studentCourse?.find(course => course._id === action.payload._id)\r\n      if (!findAlready) {\r\n        return { ...state, studentCourse: [...state.studentCourse, action.payload] };\r\n      } else {\r\n        return state;\r\n      }\r\n    case \"UPDATE_COURSES\":\r\n      let findCourse = state.studentCourse.find(course => course._id === action.payload._id)\r\n      if (findCourse) {\r\n        findCourse = action.payload\r\n        const filterOther = state.studentCourse.filter(course => course._id !== action.payload._id)\r\n        const newArr = [...filterOther, findCourse]\r\n        return { ...state, studentCourse: newArr };\r\n      } else {\r\n        return state\r\n      }\r\n    case \"CURRENT_COURSE\":\r\n      return { ...state, currentCourse: action.payload }\r\n    case \"UPDATE_CURRENT_COURSE\":\r\n      if (state.currentCourse && state.currentCourse._id === action.payload._id) {\r\n        return { ...state, currentCourse: action.payload }\r\n      } else {\r\n        return state\r\n      }\r\n    case \"ALL_ASSIGNMENTS\":\r\n      return { ...state, allAssignments: action.payload };\r\n    case \"CURRENT_ASSIGNMENT\":\r\n      return { ...state, currentAssignment: action.payload };\r\n    case \"CHECKED_ASSIGNMENTS\":\r\n      return { ...state, checkedAssignments: action.payload };\r\n\r\n    case \"UPDATE_ALL_ASSIGNMENTS\":\r\n      if (state.allAssignments && state.allAssignments[0].courseID === action.payload[0].courseID) {\r\n        return { ...state, allAssignments: action.payload }\r\n      } else {\r\n        return state\r\n      }\r\n    case \"LOG_OUT\":\r\n      return state = initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  usersReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}